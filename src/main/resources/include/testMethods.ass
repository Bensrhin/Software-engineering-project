	TSTO #110
	BOV pile_pleine
	ADDSP #60
; table des methodes
; construction de la table des methodes de Object
	LOAD #null, R0
	STORE R0, 1(GB)
	LOAD code.Object.equals, R0
	STORE R0, 2(GB)
; construction de la table des methodes de Methods
	LEA 1(GB), R0
	STORE R0, 3(GB)
	LOAD code.Methods.factoriel, R0
	STORE R0, 5(GB)
	LOAD code.Methods.abs, R0
	STORE R0, 7(GB)
	LOAD code.Methods.ulp, R0
	STORE R0, 8(GB)
	LOAD code.Methods.power, R0
	STORE R0, 6(GB)
	LOAD code.Object.equals, R0
	STORE R0, 4(GB)
; construction de la table des methodes de ChebychevValues
	LEA 1(GB), R0
	STORE R0, 9(GB)
	LOAD code.ChebychevValues.ChebyValuesActan, R0
	STORE R0, 13(GB)
	LOAD code.ChebychevValues.ChebyValuesSin, R0
	STORE R0, 12(GB)
	LOAD code.ChebychevValues.ChebyValuesCos, R0
	STORE R0, 11(GB)
	LOAD code.Object.equals, R0
	STORE R0, 10(GB)
; construction de la table des methodes de Couple
	LEA 1(GB), R0
	STORE R0, 14(GB)
	LOAD code.Object.equals, R0
	STORE R0, 15(GB)
; construction de la table des methodes de RangeReduction
	LEA 1(GB), R0
	STORE R0, 16(GB)
	LOAD code.RangeReduction.FirstReductionCos, R0
	STORE R0, 19(GB)
	LOAD code.RangeReduction.FirstReductionSin, R0
	STORE R0, 18(GB)
	LOAD code.Object.equals, R0
	STORE R0, 17(GB)
; construction de la table des methodes de BreakPoints
	LEA 1(GB), R0
	STORE R0, 20(GB)
	LOAD code.BreakPoints.BPOptVal, R0
	STORE R0, 23(GB)
	LOAD code.BreakPoints.breakPoint, R0
	STORE R0, 22(GB)
	LOAD code.Object.equals, R0
	STORE R0, 21(GB)
; construction de la table des methodes de Taylor
	LEA 1(GB), R0
	STORE R0, 24(GB)
	LOAD code.Taylor.taylorCosinus, R0
	STORE R0, 29(GB)
	LOAD code.Taylor.coefTaylorSinus, R0
	STORE R0, 26(GB)
	LOAD code.Taylor.taylorArctan, R0
	STORE R0, 31(GB)
	LOAD code.Taylor.coefTaylorArcsin, R0
	STORE R0, 32(GB)
	LOAD code.Taylor.taylorSinus, R0
	STORE R0, 27(GB)
	LOAD code.Taylor.taylorArcsin, R0
	STORE R0, 33(GB)
	LOAD code.Taylor.coefTaylorCosinus, R0
	STORE R0, 28(GB)
	LOAD code.Taylor.coefTaylorArctan, R0
	STORE R0, 30(GB)
	LOAD code.Object.equals, R0
	STORE R0, 25(GB)
; construction de la table des methodes de ChebyApproxi32
	LEA 1(GB), R0
	STORE R0, 34(GB)
	LOAD code.ChebyApproxi32.ChebychevActan, R0
	STORE R0, 36(GB)
	LOAD code.ChebyApproxi32.ChebychevSinus, R0
	STORE R0, 37(GB)
	LOAD code.ChebyApproxi32.ChebychevCosinus, R0
	STORE R0, 38(GB)
	LOAD code.Object.equals, R0
	STORE R0, 35(GB)
; construction de la table des methodes de Chebychev
	LEA 1(GB), R0
	STORE R0, 39(GB)
	LOAD code.Chebychev.sinCheb, R0
	STORE R0, 41(GB)
	LOAD code.Chebychev.cosCheb, R0
	STORE R0, 42(GB)
	LOAD code.Object.equals, R0
	STORE R0, 40(GB)
; Main program
; Beginning of main instructions:
	LOAD #0x1.921fb8p1, R2
	STORE R2, 43(GB)
	LOAD #1, R2
	OPP R2, R2
	LOAD #32, R3
	QUO R3, R2
	BOV divisionErr
	FLOAT R2, R2
	STORE R2, 44(GB)
	LOAD 43(GB), R2
	LOAD #4, R3
	FLOAT R3, R3
	DIV R3, R2
	BOV divisionErr
	STORE R2, 45(GB)
; instruction new
	NEW #2, R2
	LEA 24(GB), R0
	STORE R0, 0(R2)
	PUSH R2
	BSR init.Taylor
	POP R2
	STORE R2, 46(GB)
; appel de methode5
	ADDSP #3
	LOAD 46(GB), R2
	STORE R2, 0(SP)
	LOAD #0x0.0p0, R3
	STORE R3, -1(SP)
	LOAD #7, R3
	STORE R3, -2(SP)
	LOAD 0(SP), R2
	CMP #null, R2
	BEQ pile_pleine
	LOAD 0(R2), R2
	BSR 5(R2)
	SUBSP #3
	STORE R0, 47(GB)
; appel de methode3
	ADDSP #3
	LOAD 46(GB), R2
	STORE R2, 0(SP)
	LOAD 43(GB), R3
	LOAD #2, R4
	FLOAT R4, R4
	DIV R4, R3
	BOV divisionErr
	STORE R3, -1(SP)
	LOAD #7, R3
	STORE R3, -2(SP)
	LOAD 0(SP), R2
	CMP #null, R2
	BEQ pile_pleine
	LOAD 0(R2), R2
	BSR 3(R2)
	SUBSP #3
	STORE R0, 48(GB)
; appel de methode7
	ADDSP #3
	LOAD 46(GB), R2
	STORE R2, 0(SP)
	LOAD 43(GB), R3
	LOAD #4, R4
	FLOAT R4, R4
	DIV R4, R3
	BOV divisionErr
	STORE R3, -1(SP)
	LOAD #7, R3
	STORE R3, -2(SP)
	LOAD 0(SP), R2
	CMP #null, R2
	BEQ pile_pleine
	LOAD 0(R2), R2
	BSR 7(R2)
	SUBSP #3
	STORE R0, 49(GB)
; appel de methode9
	ADDSP #3
	LOAD 46(GB), R2
	STORE R2, 0(SP)
	LOAD 43(GB), R3
	LOAD #4, R4
	FLOAT R4, R4
	DIV R4, R3
	BOV divisionErr
	STORE R3, -1(SP)
	LOAD #7, R3
	STORE R3, -2(SP)
	LOAD 0(SP), R2
	CMP #null, R2
	BEQ pile_pleine
	LOAD 0(R2), R2
	BSR 9(R2)
	SUBSP #3
	STORE R0, 50(GB)
	LOAD 47(GB), R1
	WFLOAT
	LOAD 48(GB), R1
	WFLOAT
	LOAD 49(GB), R1
	WFLOAT
	LOAD 50(GB), R1
	WFLOAT
	HALT
init.Methods:
	RTS
code.Methods.factoriel:
	PUSH R5
	PUSH R4
	PUSH R3
	PUSH R2
	LOAD -3(LB), R3
	LOAD #0, R4
	SUB R4, R3
	LOAD R3, R1
	BEQ OpCmp_if_in_a412
	LOAD #1, R1
	BRA OpCmp_fin_in_a412
OpCmp_if_in_a412:
	LOAD #0, R1
OpCmp_fin_in_a412:
	LOAD R1, R2
	LOAD R2, R1
	BNE IfThenElse_else_a412
	LOAD #1, R4
	LOAD R4, R0
	BRA IfThenElse_fin_a412
IfThenElse_else_a412:
IfThenElse_fin_a412:
	LOAD -3(LB), R2
; appel de methode2
	ADDSP #2
	LOAD -2(LB), R4
	STORE R4, 0(SP)
	LOAD -3(LB), R3
	LOAD #1, R5
	SUB R5, R3
	STORE R3, -1(SP)
	LOAD 0(SP), R4
	CMP #null, R4
	BEQ pile_pleine
	LOAD 0(R4), R4
	BSR 2(R4)
	SUBSP #2
	MUL R0, R2
	BOV over_flow
	LOAD R2, R0
	POP R2
	POP R3
	POP R4
	POP R5
	RTS
code.Methods.power:
	PUSH R5
	PUSH R4
	PUSH R3
	PUSH R2
	LOAD #0, R2
	STORE R2, 51(GB)
	LOAD #0x1.0p0, R2
	STORE R2, 52(GB)
	LOAD -4(LB), R4
	LOAD #0, R3
	SUB R3, R4
	LOAD R4, R1
	BLT OpCmp_if_in_a1412
	LOAD #1, R1
	BRA OpCmp_fin_in_a1412
OpCmp_if_in_a1412:
	LOAD #0, R1
OpCmp_fin_in_a1412:
	LOAD R1, R2
	LOAD R2, R1
	BNE IfThenElse_else_a1412
; appel de methode3
	ADDSP #3
	LOAD -2(LB), R3
	STORE R3, 0(SP)
	LOAD #1, R4
	FLOAT R4, R4
	LOAD -3(LB), R5
	DIV R5, R4
	BOV divisionErr
	STORE R4, -1(SP)
	LOAD -4(LB), R4
	OPP R4, R4
	STORE R4, -2(SP)
	LOAD 0(SP), R3
	CMP #null, R3
	BEQ pile_pleine
	LOAD 0(R3), R3
	BSR 3(R3)
	SUBSP #3
	LOAD R0, R0
	BRA IfThenElse_fin_a1412
IfThenElse_else_a1412:
While_cond_a1919:
	LOAD -4(LB), R4
	LOAD 51(GB), R5
	SUB R5, R4
	LOAD R4, R1
	BGT OpCmp_if_in_a1919
	LOAD #1, R1
	BRA OpCmp_fin_in_a1919
OpCmp_if_in_a1919:
	LOAD #0, R1
OpCmp_fin_in_a1919:
	LOAD R1, R3
	LOAD R3, R1
	BNE While_fin_a1919
	LOAD 52(GB), R5
	LOAD -3(LB), R4
	MUL R4, R5
	BOV over_flow
	STORE R5, 52(GB)
	LOAD 51(GB), R5
	LOAD #1, R4
	ADD R4, R5
	STORE R5, 51(GB)
	BRA While_cond_a1919
While_fin_a1919:
	LOAD 52(GB), R3
	LOAD R3, R0
IfThenElse_fin_a1412:
	POP R2
	POP R3
	POP R4
	POP R5
	RTS
code.Methods.abs:
	PUSH R5
	PUSH R4
	PUSH R3
	PUSH R2
	LOAD -3(LB), R3
	LOAD #0x0.0p0, R5
	SUB R5, R3
	LOAD R3, R1
	BGT OpCmp_if_in_a2812
	LOAD #1, R1
	BRA OpCmp_fin_in_a2812
OpCmp_if_in_a2812:
	LOAD #0, R1
OpCmp_fin_in_a2812:
	LOAD R1, R2
	LOAD R2, R1
	BNE IfThenElse_else_a2812
	LOAD -3(LB), R5
	LOAD R5, R0
	BRA IfThenElse_fin_a2812
IfThenElse_else_a2812:
IfThenElse_fin_a2812:
	LOAD -3(LB), R2
	OPP R2, R2
	LOAD R2, R0
	POP R2
	POP R3
	POP R4
	POP R5
	RTS
code.Methods.ulp:
	PUSH R7
	PUSH R6
	PUSH R5
	PUSH R4
	PUSH R3
	PUSH R2
	LOAD #126, R2
	OPP R2, R2
	STORE R2, 53(GB)
	LOAD #127, R2
	STORE R2, 54(GB)
	LOAD #0, R2
	STORE R2, 55(GB)
	LOAD #0x0.0p0, R2
	STORE R2, 56(GB)
; appel de methode4
	ADDSP #2
	LOAD -2(LB), R5
	STORE R5, 0(SP)
	LOAD -3(LB), R3
	STORE R3, -1(SP)
	LOAD 0(SP), R5
	CMP #null, R5
	BEQ pile_pleine
	LOAD 0(R5), R5
	BSR 4(R5)
	SUBSP #2
; appel de methode3
	ADDSP #3
	LOAD -2(LB), R5
	STORE R5, 0(SP)
	LOAD #0x1.0p1, R3
	STORE R3, -1(SP)
	LOAD 54(GB), R3
	OPP R3, R3
	STORE R3, -2(SP)
	LOAD 0(SP), R5
	CMP #null, R5
	BEQ pile_pleine
	LOAD 0(R5), R5
	BSR 3(R5)
	SUBSP #3
	SUB R0, R0
	LOAD R0, R1
	BLE OpCmp_if_in_a3912
	LOAD #1, R1
	BRA OpCmp_fin_in_a3912
OpCmp_if_in_a3912:
	LOAD #0, R1
OpCmp_fin_in_a3912:
	LOAD R1, R2
	LOAD R2, R1
	BNE IfThenElse_else_a3912
	LOAD #0x0.000002p-126, R5
	LOAD R5, R0
	BRA IfThenElse_fin_a3912
IfThenElse_else_a3912:
; appel de methode4
	ADDSP #2
	LOAD -2(LB), R3
	STORE R3, 0(SP)
	LOAD -3(LB), R4
	STORE R4, -1(SP)
	LOAD 0(SP), R3
	CMP #null, R3
	BEQ pile_pleine
	LOAD 0(R3), R3
	BSR 4(R3)
	SUBSP #2
; appel de methode3
	ADDSP #3
	LOAD -2(LB), R3
	STORE R3, 0(SP)
	LOAD #0x1.0p1, R4
	STORE R4, -1(SP)
	LOAD 54(GB), R4
	STORE R4, -2(SP)
	LOAD 0(SP), R3
	CMP #null, R3
	BEQ pile_pleine
	LOAD 0(R3), R3
	BSR 3(R3)
	SUBSP #3
; appel de methode3
	ADDSP #3
	LOAD -2(LB), R3
	STORE R3, 0(SP)
	LOAD #0x1.0p1, R4
	STORE R4, -1(SP)
	LOAD #104, R4
	STORE R4, -2(SP)
	LOAD 0(SP), R3
	CMP #null, R3
	BEQ pile_pleine
	LOAD 0(R3), R3
	BSR 3(R3)
	SUBSP #3
	SUB R0, R0
	SUB R0, R0
	LOAD R0, R1
	BGT OpCmp_if_in_a4317
	LOAD #1, R1
	BRA OpCmp_fin_in_a4317
OpCmp_if_in_a4317:
	LOAD #0, R1
OpCmp_fin_in_a4317:
	LOAD R1, R5
	LOAD R5, R1
	BNE IfThenElse_else_a4317
; appel de methode4
	ADDSP #2
	LOAD -2(LB), R3
	STORE R3, 0(SP)
	LOAD -3(LB), R4
	STORE R4, -1(SP)
	LOAD 0(SP), R3
	CMP #null, R3
	BEQ pile_pleine
	LOAD 0(R3), R3
	BSR 4(R3)
	SUBSP #2
	LOAD R0, R0
	BRA IfThenElse_fin_a4317
IfThenElse_else_a4317:
While_cond_a4818:
	LOAD 54(GB), R4
	LOAD 53(GB), R6
	SUB R6, R4
	LOAD #1, R6
	SUB R6, R4
	LOAD R4, R1
	BGT OpCmp_if_in_a4818
	LOAD #1, R1
	BRA OpCmp_fin_in_a4818
OpCmp_if_in_a4818:
	LOAD #0, R1
OpCmp_fin_in_a4818:
	LOAD R1, R3
	LOAD R3, R1
	BNE While_fin_a4818
	LOAD 54(GB), R6
	LOAD 53(GB), R4
	ADD R4, R6
	LOAD #2, R4
	QUO R4, R6
	BOV divisionErr
	STORE R6, 55(GB)
; appel de methode3
	ADDSP #3
	LOAD -2(LB), R6
	STORE R6, 0(SP)
	LOAD #0x1.0p1, R4
	STORE R4, -1(SP)
	LOAD 55(GB), R4
	STORE R4, -2(SP)
	LOAD 0(SP), R6
	CMP #null, R6
	BEQ pile_pleine
	LOAD 0(R6), R6
	BSR 3(R6)
	SUBSP #3
	STORE R0, 56(GB)
; appel de methode4
	ADDSP #2
	LOAD -2(LB), R4
	STORE R4, 0(SP)
	LOAD -3(LB), R7
	STORE R7, -1(SP)
	LOAD 0(SP), R4
	CMP #null, R4
	BEQ pile_pleine
	LOAD 0(R4), R4
	BSR 4(R4)
	SUBSP #2
	LOAD 56(GB), R4
	SUB R4, R0
	LOAD R0, R1
	BGT OpCmp_if_in_a5120
	LOAD #1, R1
	BRA OpCmp_fin_in_a5120
OpCmp_if_in_a5120:
	LOAD #0, R1
OpCmp_fin_in_a5120:
	LOAD R1, R6
	LOAD R6, R1
	BNE IfThenElse_else_a5120
	LOAD 55(GB), R4
	STORE R4, 53(GB)
	BRA IfThenElse_fin_a5120
IfThenElse_else_a5120:
	LOAD 55(GB), R4
	STORE R4, 54(GB)
IfThenElse_fin_a5120:
	BRA While_cond_a4818
While_fin_a4818:
; appel de methode4
	ADDSP #2
	LOAD -2(LB), R6
	STORE R6, 0(SP)
	LOAD -3(LB), R4
	STORE R4, -1(SP)
	LOAD 0(SP), R6
	CMP #null, R6
	BEQ pile_pleine
	LOAD 0(R6), R6
	BSR 4(R6)
	SUBSP #2
; appel de methode3
	ADDSP #3
	LOAD -2(LB), R6
	STORE R6, 0(SP)
	LOAD #0x1.0p1, R4
	STORE R4, -1(SP)
	LOAD 54(GB), R4
	STORE R4, -2(SP)
	LOAD 0(SP), R6
	CMP #null, R6
	BEQ pile_pleine
	LOAD 0(R6), R6
	BSR 3(R6)
	SUBSP #3
	SUB R0, R0
	LOAD R0, R1
	BEQ OpCmp_if_in_a5916
	LOAD #1, R1
	BRA OpCmp_fin_in_a5916
OpCmp_if_in_a5916:
	LOAD #0, R1
OpCmp_fin_in_a5916:
	LOAD R1, R3
	LOAD R3, R1
	BNE IfThenElse_else_a5916
; appel de methode3
	ADDSP #3
	LOAD -2(LB), R6
	STORE R6, 0(SP)
	LOAD #0x1.0p1, R4
	STORE R4, -1(SP)
	LOAD 54(GB), R4
	LOAD #23, R7
	SUB R7, R4
	STORE R4, -2(SP)
	LOAD 0(SP), R6
	CMP #null, R6
	BEQ pile_pleine
	LOAD 0(R6), R6
	BSR 3(R6)
	SUBSP #3
	LOAD R0, R0
	BRA IfThenElse_fin_a5916
IfThenElse_else_a5916:
; appel de methode3
	ADDSP #3
	LOAD -2(LB), R6
	STORE R6, 0(SP)
	LOAD #0x1.0p1, R4
	STORE R4, -1(SP)
	LOAD 54(GB), R4
	LOAD #24, R7
	SUB R7, R4
	STORE R4, -2(SP)
	LOAD 0(SP), R6
	CMP #null, R6
	BEQ pile_pleine
	LOAD 0(R6), R6
	BSR 3(R6)
	SUBSP #3
	LOAD R0, R0
IfThenElse_fin_a5916:
IfThenElse_fin_a4317:
IfThenElse_fin_a3912:
	POP R2
	POP R3
	POP R4
	POP R5
	POP R6
	POP R7
	RTS
init.ChebychevValues:
	RTS
code.ChebychevValues.ChebyValuesCos:
	PUSH R7
	PUSH R6
	PUSH R5
	PUSH R4
	PUSH R3
	PUSH R2
	LOAD -3(LB), R5
	LOAD #1, R3
	SUB R3, R5
	LOAD R5, R1
	BEQ OpCmp_if_in_a312
	LOAD #1, R1
	BRA OpCmp_fin_in_a312
OpCmp_if_in_a312:
	LOAD #0, R1
OpCmp_fin_in_a312:
	LOAD R1, R2
	LOAD R2, R1
	BNE IfThenElse_else_a312
	LOAD #0x1.c1528p-1, R3
	LOAD R3, R0
	BRA IfThenElse_fin_a312
IfThenElse_else_a312:
	LOAD -3(LB), R5
	LOAD #2, R6
	SUB R6, R5
	LOAD R5, R1
	BEQ OpCmp_if_in_a617
	LOAD #1, R1
	BRA OpCmp_fin_in_a617
OpCmp_if_in_a617:
	LOAD #0, R1
OpCmp_fin_in_a617:
	LOAD R1, R3
	LOAD R3, R1
	BNE IfThenElse_else_a617
	LOAD #0x1.f0154ap-1, R6
	LOAD R6, R0
	BRA IfThenElse_fin_a617
IfThenElse_else_a617:
	LOAD -3(LB), R5
	LOAD #3, R4
	SUB R4, R5
	LOAD R5, R1
	BEQ OpCmp_if_in_a917
	LOAD #1, R1
	BRA OpCmp_fin_in_a917
OpCmp_if_in_a917:
	LOAD #0, R1
OpCmp_fin_in_a917:
	LOAD R1, R6
	LOAD R6, R1
	BNE IfThenElse_else_a917
	LOAD #0x1.fc0156p-1, R4
	LOAD R4, R0
	BRA IfThenElse_fin_a917
IfThenElse_else_a917:
	LOAD #0x1.ff0016p-1, R4
	LOAD R4, R0
IfThenElse_fin_a917:
IfThenElse_fin_a617:
IfThenElse_fin_a312:
	POP R2
	POP R3
	POP R4
	POP R5
	POP R6
	POP R7
	RTS
code.ChebychevValues.ChebyValuesSin:
	PUSH R7
	PUSH R6
	PUSH R5
	PUSH R4
	PUSH R3
	PUSH R2
	LOAD -3(LB), R3
	LOAD #1, R6
	SUB R6, R3
	LOAD R3, R1
	BEQ OpCmp_if_in_a1812
	LOAD #1, R1
	BRA OpCmp_fin_in_a1812
OpCmp_if_in_a1812:
	LOAD #0, R1
OpCmp_fin_in_a1812:
	LOAD R1, R2
	LOAD R2, R1
	BNE IfThenElse_else_a1812
	LOAD #0x1.eaee88p-2, R6
	LOAD R6, R0
	BRA IfThenElse_fin_a1812
IfThenElse_else_a1812:
	LOAD -3(LB), R3
	LOAD #2, R4
	SUB R4, R3
	LOAD R3, R1
	BEQ OpCmp_if_in_a2117
	LOAD #1, R1
	BRA OpCmp_fin_in_a2117
OpCmp_if_in_a2117:
	LOAD #0, R1
OpCmp_fin_in_a2117:
	LOAD R1, R6
	LOAD R6, R1
	BNE IfThenElse_else_a2117
	LOAD #0x1.faaeeep-3, R4
	LOAD R4, R0
	BRA IfThenElse_fin_a2117
IfThenElse_else_a2117:
	LOAD -3(LB), R3
	LOAD #3, R5
	SUB R5, R3
	LOAD R3, R1
	BEQ OpCmp_if_in_a2417
	LOAD #1, R1
	BRA OpCmp_fin_in_a2417
OpCmp_if_in_a2417:
	LOAD #0, R1
OpCmp_fin_in_a2417:
	LOAD R1, R4
	LOAD R4, R1
	BNE IfThenElse_else_a2417
	LOAD #0x1.feaaeep-4, R5
	LOAD R5, R0
	BRA IfThenElse_fin_a2417
IfThenElse_else_a2417:
	LOAD #0x1.ffaaaep-5, R5
	LOAD R5, R0
IfThenElse_fin_a2417:
IfThenElse_fin_a2117:
IfThenElse_fin_a1812:
	POP R2
	POP R3
	POP R4
	POP R5
	POP R6
	POP R7
	RTS
code.ChebychevValues.ChebyValuesActan:
	PUSH R12
	PUSH R11
	PUSH R10
	PUSH R9
	PUSH R8
	PUSH R7
	PUSH R6
	PUSH R5
	PUSH R4
	PUSH R3
	PUSH R2
	LOAD -3(LB), R6
	LOAD #0, R4
	SUB R4, R6
	LOAD R6, R1
	BEQ OpCmp_if_in_a3312
	LOAD #1, R1
	BRA OpCmp_fin_in_a3312
OpCmp_if_in_a3312:
	LOAD #0, R1
OpCmp_fin_in_a3312:
	LOAD R1, R2
	LOAD R2, R1
	BNE IfThenElse_else_a3312
	LOAD #0x1.936bb8p-4, R4
	OPP R4, R4
	LOAD R4, R0
	BRA IfThenElse_fin_a3312
IfThenElse_else_a3312:
	LOAD -3(LB), R6
	LOAD #1, R5
	SUB R5, R6
	LOAD R6, R1
	BEQ OpCmp_if_in_a3617
	LOAD #1, R1
	BRA OpCmp_fin_in_a3617
OpCmp_if_in_a3617:
	LOAD #0, R1
OpCmp_fin_in_a3617:
	LOAD R1, R4
	LOAD R4, R1
	BNE IfThenElse_else_a3617
	LOAD #0x1.7471fp1, R5
	OPP R5, R5
	LOAD R5, R0
	BRA IfThenElse_fin_a3617
IfThenElse_else_a3617:
	LOAD -3(LB), R6
	LOAD #2, R3
	SUB R3, R6
	LOAD R6, R1
	BEQ OpCmp_if_in_a3917
	LOAD #1, R1
	BRA OpCmp_fin_in_a3917
OpCmp_if_in_a3917:
	LOAD #0, R1
OpCmp_fin_in_a3917:
	LOAD R1, R5
	LOAD R5, R1
	BNE IfThenElse_else_a3917
	LOAD #0x1.e6db9ap-1, R3
	LOAD R3, R0
	BRA IfThenElse_fin_a3917
IfThenElse_else_a3917:
	LOAD -3(LB), R6
	LOAD #3, R7
	SUB R7, R6
	LOAD R6, R1
	BEQ OpCmp_if_in_a4217
	LOAD #1, R1
	BRA OpCmp_fin_in_a4217
OpCmp_if_in_a4217:
	LOAD #0, R1
OpCmp_fin_in_a4217:
	LOAD R1, R3
	LOAD R3, R1
	BNE IfThenElse_else_a4217
	LOAD #0x1.9a9d3ap-2, R7
	OPP R7, R7
	LOAD R7, R0
	BRA IfThenElse_fin_a4217
IfThenElse_else_a4217:
	LOAD -3(LB), R6
	LOAD #4, R8
	SUB R8, R6
	LOAD R6, R1
	BEQ OpCmp_if_in_a4517
	LOAD #1, R1
	BRA OpCmp_fin_in_a4517
OpCmp_if_in_a4517:
	LOAD #0, R1
OpCmp_fin_in_a4517:
	LOAD R1, R7
	LOAD R7, R1
	BNE IfThenElse_else_a4517
	LOAD #0x1.4e2a9cp4, R8
	OPP R8, R8
	LOAD R8, R0
	BRA IfThenElse_fin_a4517
IfThenElse_else_a4517:
	LOAD -3(LB), R6
	LOAD #5, R9
	SUB R9, R6
	LOAD R6, R1
	BEQ OpCmp_if_in_a4817
	LOAD #1, R1
	BRA OpCmp_fin_in_a4817
OpCmp_if_in_a4817:
	LOAD #0, R1
OpCmp_fin_in_a4817:
	LOAD R1, R8
	LOAD R8, R1
	BNE IfThenElse_else_a4817
	LOAD #0x1.08a24cp-1, R9
	LOAD R9, R0
	BRA IfThenElse_fin_a4817
IfThenElse_else_a4817:
	LOAD -3(LB), R6
	LOAD #6, R10
	SUB R10, R6
	LOAD R6, R1
	BEQ OpCmp_if_in_a5117
	LOAD #1, R1
	BRA OpCmp_fin_in_a5117
OpCmp_if_in_a5117:
	LOAD #0, R1
OpCmp_fin_in_a5117:
	LOAD R1, R9
	LOAD R9, R1
	BNE IfThenElse_else_a5117
	LOAD #0x1.911bb2p-1, R10
	OPP R10, R10
	LOAD R10, R0
	BRA IfThenElse_fin_a5117
IfThenElse_else_a5117:
	LOAD -3(LB), R6
	LOAD #7, R11
	SUB R11, R6
	LOAD R6, R1
	BEQ OpCmp_if_in_a5417
	LOAD #1, R1
	BRA OpCmp_fin_in_a5417
OpCmp_if_in_a5417:
	LOAD #0, R1
OpCmp_fin_in_a5417:
	LOAD R1, R10
	LOAD R10, R1
	BNE IfThenElse_else_a5417
	LOAD #0x1.0ae7c8p2, R11
	LOAD R11, R0
	BRA IfThenElse_fin_a5417
IfThenElse_else_a5417:
	LOAD -3(LB), R6
	LOAD #8, R12
	SUB R12, R6
	LOAD R6, R1
	BEQ OpCmp_if_in_a5717
	LOAD #1, R1
	BRA OpCmp_fin_in_a5717
OpCmp_if_in_a5717:
	LOAD #0, R1
OpCmp_fin_in_a5717:
	LOAD R1, R11
	LOAD R11, R1
	BNE IfThenElse_else_a5717
	LOAD #0x1.921412p-3, R12
	LOAD R12, R0
	BRA IfThenElse_fin_a5717
IfThenElse_else_a5717:
	LOAD #0x0.0p0, R12
	LOAD R12, R0
IfThenElse_fin_a5717:
IfThenElse_fin_a5417:
IfThenElse_fin_a5117:
IfThenElse_fin_a4817:
IfThenElse_fin_a4517:
IfThenElse_fin_a4217:
IfThenElse_fin_a3917:
IfThenElse_fin_a3617:
IfThenElse_fin_a3312:
	POP R2
	POP R3
	POP R4
	POP R5
	POP R6
	POP R7
	POP R8
	POP R9
	POP R10
	POP R11
	POP R12
	RTS
init.Couple:
	LOAD #0, R0
	LOAD -2(LB), R1
	STORE R0, 1(R1)
	LOAD #0, R0
	LOAD -2(LB), R1
	STORE R0, 2(R1)
	RTS
init.RangeReduction:
	LOAD #0x1.921fb4p1, R2
	LOAD R2, R0
	LOAD -2(LB), R1
	STORE R0, 1(R1)
	RTS
code.RangeReduction.FirstReductionSin:
	PUSH R12
	PUSH R11
	PUSH R10
	PUSH R9
	PUSH R8
	PUSH R7
	PUSH R6
	PUSH R5
	PUSH R4
	PUSH R3
	PUSH R2
	LOAD #0x1.92p1, R2
	STORE R2, 57(GB)
	LOAD #0x1.fb5444p-11, R2
	STORE R2, 58(GB)
	LOAD -3(LB), R2
	LOAD -2(LB), R1
	LOAD 1(R1), R4
	DIV R4, R2
	BOV divisionErr
	INT R2, R2
	STORE R2, 59(GB)
	LOAD -3(LB), R2
	LOAD 59(GB), R4
	FLOAT R4, R4
	LOAD 57(GB), R5
	MUL R5, R4
	BOV over_flow
	SUB R4, R2
	STORE R2, 60(GB)
	LOAD 60(GB), R2
	LOAD 59(GB), R4
	FLOAT R4, R4
	LOAD 58(GB), R5
	MUL R5, R4
	BOV over_flow
	SUB R4, R2
	STORE R2, 60(GB)
	LOAD 59(GB), R4
	LOAD #2, R5
	REM R5, R4
	BOV divisionErr
	LOAD #0, R5
	SUB R5, R4
	LOAD R4, R1
	BEQ OpCmp_if_in_a1212
	LOAD #1, R1
	BRA OpCmp_fin_in_a1212
OpCmp_if_in_a1212:
	LOAD #0, R1
OpCmp_fin_in_a1212:
	LOAD R1, R2
	LOAD R2, R1
	BNE IfThenElse_else_a1212
	LOAD 60(GB), R5
	LOAD R5, R0
	BRA IfThenElse_fin_a1212
IfThenElse_else_a1212:
IfThenElse_fin_a1212:
	LOAD 60(GB), R2
	OPP R2, R2
	LOAD R2, R0
	POP R2
	POP R3
	POP R4
	POP R5
	POP R6
	POP R7
	POP R8
	POP R9
	POP R10
	POP R11
	POP R12
	RTS
code.RangeReduction.FirstReductionCos:
	PUSH R12
	PUSH R11
	PUSH R10
	PUSH R9
	PUSH R8
	PUSH R7
	PUSH R6
	PUSH R5
	PUSH R4
	PUSH R3
	PUSH R2
	LOAD #0x1.92p1, R2
	STORE R2, 61(GB)
	LOAD #0x1.fb5444p-11, R2
	STORE R2, 62(GB)
	LOAD -3(LB), R2
	LOAD -2(LB), R1
	LOAD 1(R1), R5
	DIV R5, R2
	BOV divisionErr
	INT R2, R2
	STORE R2, 63(GB)
	LOAD -3(LB), R2
	LOAD 63(GB), R5
	FLOAT R5, R5
	LOAD 61(GB), R4
	MUL R4, R5
	BOV over_flow
	SUB R5, R2
	STORE R2, 64(GB)
	LOAD 64(GB), R2
	LOAD 63(GB), R5
	FLOAT R5, R5
	LOAD 62(GB), R4
	MUL R4, R5
	BOV over_flow
	SUB R5, R2
	STORE R2, 64(GB)
	LOAD 64(GB), R2
	LOAD R2, R0
	POP R2
	POP R3
	POP R4
	POP R5
	POP R6
	POP R7
	POP R8
	POP R9
	POP R10
	POP R11
	POP R12
	RTS
init.BreakPoints:
; instruction new
	NEW #1, R2
	LEA 3(GB), R0
	STORE R0, 0(R2)
	PUSH R2
	BSR init.Methods
	POP R2
	LOAD R2, R0
	LOAD -2(LB), R1
	STORE R0, 1(R1)
	RTS
code.BreakPoints.breakPoint:
	PUSH R12
	PUSH R11
	PUSH R10
	PUSH R9
	PUSH R8
	PUSH R7
	PUSH R6
	PUSH R5
	PUSH R4
	PUSH R3
	PUSH R2
; appel de methode3
	ADDSP #3
	LOAD -2(LB), R1
	LOAD 1(R1), R2
	STORE R2, 0(SP)
	LOAD #0x1.0p1, R5
	STORE R5, -1(SP)
	LOAD -3(LB), R5
	OPP R5, R5
	STORE R5, -2(SP)
	LOAD 0(SP), R2
	CMP #null, R2
	BEQ pile_pleine
	LOAD 0(R2), R2
	BSR 3(R2)
	SUBSP #3
	LOAD #1, R2
	LOAD -4(LB), R5
	LOAD #8, R4
	QUO R4, R5
	BOV divisionErr
	ADD R5, R2
	FLOAT R2, R2
	MUL R2, R0
	BOV over_flow
	LOAD R0, R0
	POP R2
	POP R3
	POP R4
	POP R5
	POP R6
	POP R7
	POP R8
	POP R9
	POP R10
	POP R11
	POP R12
	RTS
code.BreakPoints.BPOptVal:
	PUSH R12
	PUSH R11
	PUSH R10
	PUSH R9
	PUSH R8
	PUSH R7
	PUSH R6
	PUSH R5
	PUSH R4
	PUSH R3
	PUSH R2
; instruction new
	NEW #3, R2
	LEA 14(GB), R0
	STORE R0, 0(R2)
	PUSH R2
	BSR init.Couple
	POP R2
	STORE R2, 65(GB)
; appel de methode2
	ADDSP #3
	LOAD -2(LB), R2
	STORE R2, 0(SP)
	LOAD #1, R5
	STORE R5, -1(SP)
	LOAD #0, R5
	STORE R5, -2(SP)
	LOAD 0(SP), R2
	CMP #null, R2
	BEQ pile_pleine
	LOAD 0(R2), R2
	BSR 2(R2)
	SUBSP #3
	STORE R0, 66(GB)
	LOAD #0, R2
	STORE R2, 67(GB)
	LOAD #1, R2
	STORE R2, 68(GB)
	LOAD #0, R2
	STORE R2, 69(GB)
While_cond_a1415:
	LOAD 68(GB), R5
	LOAD #5, R4
	SUB R4, R5
	LOAD R5, R1
	BLT OpCmp_if_in_a1415
	LOAD #1, R1
	BRA OpCmp_fin_in_a1415
OpCmp_if_in_a1415:
	LOAD #0, R1
OpCmp_fin_in_a1415:
	LOAD R1, R2
	LOAD R2, R1
	BNE While_fin_a1415
While_cond_a1519:
	LOAD 69(GB), R5
	LOAD #8, R3
	SUB R3, R5
	LOAD R5, R1
	BLT OpCmp_if_in_a1519
	LOAD #1, R1
	BRA OpCmp_fin_in_a1519
OpCmp_if_in_a1519:
	LOAD #0, R1
OpCmp_fin_in_a1519:
	LOAD R1, R4
	LOAD R4, R1
	BNE While_fin_a1519
; appel de methode4
	ADDSP #2
	LOAD -2(LB), R1
	LOAD 1(R1), R5
	STORE R5, 0(SP)
	LOAD 66(GB), R7
	LOAD -3(LB), R8
	SUB R8, R7
	STORE R7, -1(SP)
	LOAD 0(SP), R5
	CMP #null, R5
	BEQ pile_pleine
	LOAD 0(R5), R5
	BSR 4(R5)
	SUBSP #2
; appel de methode4
	ADDSP #2
	LOAD -2(LB), R1
	LOAD 1(R1), R5
	STORE R5, 0(SP)
; appel de methode2
	ADDSP #3
	LOAD -2(LB), R7
	STORE R7, 0(SP)
	LOAD 68(GB), R8
	STORE R8, -1(SP)
	LOAD 69(GB), R8
	STORE R8, -2(SP)
	LOAD 0(SP), R7
	CMP #null, R7
	BEQ pile_pleine
	LOAD 0(R7), R7
	BSR 2(R7)
	SUBSP #3
	LOAD -3(LB), R7
	SUB R7, R0
	STORE R0, -1(SP)
	LOAD 0(SP), R5
	CMP #null, R5
	BEQ pile_pleine
	LOAD 0(R5), R5
	BSR 4(R5)
	SUBSP #2
	SUB R0, R0
	LOAD R0, R1
	BGT OpCmp_if_in_a1619
	LOAD #1, R1
	BRA OpCmp_fin_in_a1619
OpCmp_if_in_a1619:
	LOAD #0, R1
OpCmp_fin_in_a1619:
	LOAD R1, R3
	LOAD R3, R1
	BNE IfThenElse_else_a1619
	LOAD #1, R5
	STORE R5, 67(GB)
; appel de methode2
	ADDSP #3
	LOAD -2(LB), R5
	STORE R5, 0(SP)
	LOAD 68(GB), R7
	STORE R7, -1(SP)
	LOAD 69(GB), R7
	STORE R7, -2(SP)
	LOAD 0(SP), R5
	CMP #null, R5
	BEQ pile_pleine
	LOAD 0(R5), R5
	BSR 2(R5)
	SUBSP #3
	STORE R0, 66(GB)
	LOAD 68(GB), R5
	LOAD -2(LB), R1
	STORE R5, 1(R1)
	LOAD 69(GB), R5
	LOAD -2(LB), R1
	STORE R5, 2(R1)
	BRA IfThenElse_fin_a1619
IfThenElse_else_a1619:
IfThenElse_fin_a1619:
	LOAD 69(GB), R3
	LOAD #1, R5
	ADD R5, R3
	STORE R3, 69(GB)
	BRA While_cond_a1519
While_fin_a1519:
	LOAD #0, R4
	STORE R4, 69(GB)
	LOAD 68(GB), R4
	LOAD #1, R3
	ADD R3, R4
	STORE R4, 68(GB)
	BRA While_cond_a1415
While_fin_a1415:
	LOAD 67(GB), R4
	LOAD #0, R3
	SUB R3, R4
	LOAD R4, R1
	BEQ OpCmp_if_in_a2712
	LOAD #1, R1
	BRA OpCmp_fin_in_a2712
OpCmp_if_in_a2712:
	LOAD #0, R1
OpCmp_fin_in_a2712:
	LOAD R1, R2
	LOAD R2, R1
	BNE IfThenElse_else_a2712
	LOAD #1, R3
	LOAD -2(LB), R1
	STORE R3, 1(R1)
	LOAD #0, R3
	LOAD -2(LB), R1
	STORE R3, 2(R1)
	BRA IfThenElse_fin_a2712
IfThenElse_else_a2712:
IfThenElse_fin_a2712:
	LOAD 65(GB), R2
	LOAD R2, R0
	POP R2
	POP R3
	POP R4
	POP R5
	POP R6
	POP R7
	POP R8
	POP R9
	POP R10
	POP R11
	POP R12
	RTS
init.Taylor:
; instruction new
	NEW #1, R2
	LEA 3(GB), R0
	STORE R0, 0(R2)
	PUSH R2
	BSR init.Methods
	POP R2
	LOAD R2, R0
	LOAD -2(LB), R1
	STORE R0, 1(R1)
	RTS
code.Taylor.coefTaylorSinus:
	PUSH R12
	PUSH R11
	PUSH R10
	PUSH R9
	PUSH R8
	PUSH R7
	PUSH R6
	PUSH R5
	PUSH R4
	PUSH R3
	PUSH R2
; appel de methode3
	ADDSP #3
	LOAD -2(LB), R1
	LOAD 1(R1), R2
	STORE R2, 0(SP)
	LOAD #0x1.0p0, R3
	OPP R3, R3
	STORE R3, -1(SP)
	LOAD -3(LB), R3
	STORE R3, -2(SP)
	LOAD 0(SP), R2
	CMP #null, R2
	BEQ pile_pleine
	LOAD 0(R2), R2
	BSR 3(R2)
	SUBSP #3
; appel de methode3
	ADDSP #3
	LOAD -2(LB), R1
	LOAD 1(R1), R2
	STORE R2, 0(SP)
	LOAD -4(LB), R3
	STORE R3, -1(SP)
	LOAD #2, R3
	LOAD -3(LB), R4
	MUL R4, R3
	BOV over_flow
	LOAD #1, R4
; appel de methode2
	ADDSP #2
	LOAD -2(LB), R1
	LOAD 1(R1), R5
	STORE R5, 0(SP)
	LOAD #2, R7
	LOAD -3(LB), R8
	MUL R8, R7
	BOV over_flow
	LOAD #1, R8
	ADD R8, R7
	STORE R7, -1(SP)
	LOAD 0(SP), R5
	CMP #null, R5
	BEQ pile_pleine
	LOAD 0(R5), R5
	BSR 2(R5)
	SUBSP #2
	QUO R0, R4
	BOV divisionErr
	ADD R4, R3
	STORE R3, -2(SP)
	LOAD 0(SP), R2
	CMP #null, R2
	BEQ pile_pleine
	LOAD 0(R2), R2
	BSR 3(R2)
	SUBSP #3
	MUL R0, R0
	BOV over_flow
	LOAD R0, R0
	POP R2
	POP R3
	POP R4
	POP R5
	POP R6
	POP R7
	POP R8
	POP R9
	POP R10
	POP R11
	POP R12
	RTS
code.Taylor.taylorSinus:
	PUSH R12
	PUSH R11
	PUSH R10
	PUSH R9
	PUSH R8
	PUSH R7
	PUSH R6
	PUSH R5
	PUSH R4
	PUSH R3
	PUSH R2
	LOAD #0, R2
	FLOAT R2, R2
	STORE R2, 70(GB)
	LOAD #0, R2
	STORE R2, 71(GB)
While_cond_a2015:
	LOAD 71(GB), R3
	LOAD -4(LB), R4
	SUB R4, R3
	LOAD R3, R1
	BLT OpCmp_if_in_a2015
	LOAD #1, R1
	BRA OpCmp_fin_in_a2015
OpCmp_if_in_a2015:
	LOAD #0, R1
OpCmp_fin_in_a2015:
	LOAD R1, R2
	LOAD R2, R1
	BNE While_fin_a2015
	LOAD 70(GB), R4
; appel de methode2
	ADDSP #3
	LOAD -2(LB), R3
	STORE R3, 0(SP)
	LOAD 71(GB), R5
	STORE R5, -1(SP)
	LOAD -3(LB), R5
	STORE R5, -2(SP)
	LOAD 0(SP), R3
	CMP #null, R3
	BEQ pile_pleine
	LOAD 0(R3), R3
	BSR 2(R3)
	SUBSP #3
	ADD R0, R4
	STORE R4, 70(GB)
	LOAD 71(GB), R4
	LOAD #1, R3
	ADD R3, R4
	STORE R4, 71(GB)
	BRA While_cond_a2015
While_fin_a2015:
	LOAD 70(GB), R2
	LOAD R2, R0
	POP R2
	POP R3
	POP R4
	POP R5
	POP R6
	POP R7
	POP R8
	POP R9
	POP R10
	POP R11
	POP R12
	RTS
code.Taylor.coefTaylorCosinus:
	PUSH R12
	PUSH R11
	PUSH R10
	PUSH R9
	PUSH R8
	PUSH R7
	PUSH R6
	PUSH R5
	PUSH R4
	PUSH R3
	PUSH R2
; appel de methode3
	ADDSP #3
	LOAD -2(LB), R1
	LOAD 1(R1), R2
	STORE R2, 0(SP)
	LOAD #0x1.0p0, R4
	OPP R4, R4
	STORE R4, -1(SP)
	LOAD -3(LB), R4
	STORE R4, -2(SP)
	LOAD 0(SP), R2
	CMP #null, R2
	BEQ pile_pleine
	LOAD 0(R2), R2
	BSR 3(R2)
	SUBSP #3
; appel de methode3
	ADDSP #3
	LOAD -2(LB), R1
	LOAD 1(R1), R2
	STORE R2, 0(SP)
	LOAD -4(LB), R4
	STORE R4, -1(SP)
	LOAD #2, R4
	LOAD -3(LB), R3
	MUL R3, R4
	BOV over_flow
; appel de methode2
	ADDSP #2
	LOAD -2(LB), R1
	LOAD 1(R1), R3
	STORE R3, 0(SP)
	LOAD #2, R5
	LOAD -3(LB), R7
	MUL R7, R5
	BOV over_flow
	STORE R5, -1(SP)
	LOAD 0(SP), R3
	CMP #null, R3
	BEQ pile_pleine
	LOAD 0(R3), R3
	BSR 2(R3)
	SUBSP #2
	QUO R0, R4
	BOV divisionErr
	STORE R4, -2(SP)
	LOAD 0(SP), R2
	CMP #null, R2
	BEQ pile_pleine
	LOAD 0(R2), R2
	BSR 3(R2)
	SUBSP #3
	MUL R0, R0
	BOV over_flow
	LOAD R0, R0
	POP R2
	POP R3
	POP R4
	POP R5
	POP R6
	POP R7
	POP R8
	POP R9
	POP R10
	POP R11
	POP R12
	RTS
code.Taylor.taylorCosinus:
	PUSH R12
	PUSH R11
	PUSH R10
	PUSH R9
	PUSH R8
	PUSH R7
	PUSH R6
	PUSH R5
	PUSH R4
	PUSH R3
	PUSH R2
	LOAD #0, R2
	FLOAT R2, R2
	STORE R2, 72(GB)
	LOAD #0, R2
	STORE R2, 73(GB)
While_cond_a3415:
	LOAD 73(GB), R4
	LOAD -4(LB), R3
	SUB R3, R4
	LOAD R4, R1
	BLT OpCmp_if_in_a3415
	LOAD #1, R1
	BRA OpCmp_fin_in_a3415
OpCmp_if_in_a3415:
	LOAD #0, R1
OpCmp_fin_in_a3415:
	LOAD R1, R2
	LOAD R2, R1
	BNE While_fin_a3415
	LOAD 72(GB), R3
; appel de methode4
	ADDSP #3
	LOAD -2(LB), R4
	STORE R4, 0(SP)
	LOAD 73(GB), R5
	STORE R5, -1(SP)
	LOAD -3(LB), R5
	STORE R5, -2(SP)
	LOAD 0(SP), R4
	CMP #null, R4
	BEQ pile_pleine
	LOAD 0(R4), R4
	BSR 4(R4)
	SUBSP #3
	ADD R0, R3
	STORE R3, 72(GB)
	LOAD 73(GB), R3
	LOAD #1, R4
	ADD R4, R3
	STORE R3, 73(GB)
	BRA While_cond_a3415
While_fin_a3415:
	LOAD 72(GB), R2
	LOAD R2, R0
	POP R2
	POP R3
	POP R4
	POP R5
	POP R6
	POP R7
	POP R8
	POP R9
	POP R10
	POP R11
	POP R12
	RTS
code.Taylor.coefTaylorArctan:
	PUSH R12
	PUSH R11
	PUSH R10
	PUSH R9
	PUSH R8
	PUSH R7
	PUSH R6
	PUSH R5
	PUSH R4
	PUSH R3
	PUSH R2
; appel de methode3
	ADDSP #3
	LOAD -2(LB), R1
	LOAD 1(R1), R2
	STORE R2, 0(SP)
	LOAD #0x1.0p0, R3
	OPP R3, R3
	STORE R3, -1(SP)
	LOAD -3(LB), R3
	STORE R3, -2(SP)
	LOAD 0(SP), R2
	CMP #null, R2
	BEQ pile_pleine
	LOAD 0(R2), R2
	BSR 3(R2)
	SUBSP #3
; appel de methode3
	ADDSP #3
	LOAD -2(LB), R1
	LOAD 1(R1), R2
	STORE R2, 0(SP)
	LOAD -4(LB), R3
	STORE R3, -1(SP)
	LOAD #2, R3
	LOAD -3(LB), R4
	MUL R4, R3
	BOV over_flow
	LOAD #1, R4
	ADD R4, R3
	LOAD #2, R4
	LOAD -3(LB), R5
	MUL R5, R4
	BOV over_flow
	LOAD #1, R5
	ADD R5, R4
	QUO R4, R3
	BOV divisionErr
	STORE R3, -2(SP)
	LOAD 0(SP), R2
	CMP #null, R2
	BEQ pile_pleine
	LOAD 0(R2), R2
	BSR 3(R2)
	SUBSP #3
	MUL R0, R0
	BOV over_flow
	LOAD R0, R0
	POP R2
	POP R3
	POP R4
	POP R5
	POP R6
	POP R7
	POP R8
	POP R9
	POP R10
	POP R11
	POP R12
	RTS
code.Taylor.taylorArctan:
	PUSH R12
	PUSH R11
	PUSH R10
	PUSH R9
	PUSH R8
	PUSH R7
	PUSH R6
	PUSH R5
	PUSH R4
	PUSH R3
	PUSH R2
	LOAD #0, R2
	FLOAT R2, R2
	STORE R2, 74(GB)
	LOAD #0, R2
	STORE R2, 75(GB)
While_cond_a4815:
	LOAD 75(GB), R3
	LOAD -4(LB), R4
	SUB R4, R3
	LOAD R3, R1
	BLT OpCmp_if_in_a4815
	LOAD #1, R1
	BRA OpCmp_fin_in_a4815
OpCmp_if_in_a4815:
	LOAD #0, R1
OpCmp_fin_in_a4815:
	LOAD R1, R2
	LOAD R2, R1
	BNE While_fin_a4815
	LOAD 74(GB), R4
; appel de methode6
	ADDSP #3
	LOAD -2(LB), R3
	STORE R3, 0(SP)
	LOAD 75(GB), R5
	STORE R5, -1(SP)
	LOAD -3(LB), R5
	STORE R5, -2(SP)
	LOAD 0(SP), R3
	CMP #null, R3
	BEQ pile_pleine
	LOAD 0(R3), R3
	BSR 6(R3)
	SUBSP #3
	ADD R0, R4
	STORE R4, 74(GB)
	LOAD 75(GB), R4
	LOAD #1, R3
	ADD R3, R4
	STORE R4, 75(GB)
	BRA While_cond_a4815
While_fin_a4815:
	LOAD 74(GB), R2
	LOAD R2, R0
	POP R2
	POP R3
	POP R4
	POP R5
	POP R6
	POP R7
	POP R8
	POP R9
	POP R10
	POP R11
	POP R12
	RTS
code.Taylor.coefTaylorArcsin:
	PUSH R12
	PUSH R11
	PUSH R10
	PUSH R9
	PUSH R8
	PUSH R7
	PUSH R6
	PUSH R5
	PUSH R4
	PUSH R3
	PUSH R2
; appel de methode3
	ADDSP #3
	LOAD -2(LB), R1
	LOAD 1(R1), R2
	STORE R2, 0(SP)
	LOAD #0x1.0p0, R4
	OPP R4, R4
	STORE R4, -1(SP)
	LOAD -3(LB), R4
	STORE R4, -2(SP)
	LOAD 0(SP), R2
	CMP #null, R2
	BEQ pile_pleine
	LOAD 0(R2), R2
	BSR 3(R2)
	SUBSP #3
; appel de methode3
	ADDSP #3
	LOAD -2(LB), R1
	LOAD 1(R1), R2
	STORE R2, 0(SP)
	LOAD -4(LB), R4
	STORE R4, -1(SP)
	LOAD #2, R4
	LOAD -3(LB), R3
	MUL R3, R4
	BOV over_flow
	LOAD #1, R3
	ADD R3, R4
	STORE R4, -2(SP)
	LOAD 0(SP), R2
	CMP #null, R2
	BEQ pile_pleine
	LOAD 0(R2), R2
	BSR 3(R2)
	SUBSP #3
	MUL R0, R0
	BOV over_flow
; appel de methode2
	ADDSP #2
	LOAD -2(LB), R1
	LOAD 1(R1), R2
	STORE R2, 0(SP)
	LOAD #2, R4
	LOAD -3(LB), R3
	MUL R3, R4
	BOV over_flow
	STORE R4, -1(SP)
	LOAD 0(SP), R2
	CMP #null, R2
	BEQ pile_pleine
	LOAD 0(R2), R2
	BSR 2(R2)
	SUBSP #2
	FLOAT R0, R0
	MUL R0, R0
	BOV over_flow
	LOAD #2, R2
	LOAD -3(LB), R4
	MUL R4, R2
	BOV over_flow
	LOAD #1, R4
	ADD R4, R2
	FLOAT R2, R2
; appel de methode3
	ADDSP #3
	LOAD -2(LB), R1
	LOAD 1(R1), R4
	STORE R4, 0(SP)
	LOAD #0x1.0p1, R3
	STORE R3, -1(SP)
	LOAD #2, R3
	LOAD -3(LB), R5
	MUL R5, R3
	BOV over_flow
	STORE R3, -2(SP)
	LOAD 0(SP), R4
	CMP #null, R4
	BEQ pile_pleine
	LOAD 0(R4), R4
	BSR 3(R4)
	SUBSP #3
	MUL R0, R2
	BOV over_flow
; appel de methode3
	ADDSP #3
	LOAD -2(LB), R1
	LOAD 1(R1), R4
	STORE R4, 0(SP)
; appel de methode2
	ADDSP #2
	LOAD -2(LB), R1
	LOAD 1(R1), R3
	STORE R3, 0(SP)
	LOAD -3(LB), R5
	STORE R5, -1(SP)
	LOAD 0(SP), R3
	CMP #null, R3
	BEQ pile_pleine
	LOAD 0(R3), R3
	BSR 2(R3)
	SUBSP #2
	FLOAT R0, R0
	STORE R0, -1(SP)
	LOAD #2, R3
	STORE R3, -2(SP)
	LOAD 0(SP), R4
	CMP #null, R4
	BEQ pile_pleine
	LOAD 0(R4), R4
	BSR 3(R4)
	SUBSP #3
	MUL R0, R2
	BOV over_flow
	DIV R2, R0
	BOV divisionErr
	LOAD R0, R0
	POP R2
	POP R3
	POP R4
	POP R5
	POP R6
	POP R7
	POP R8
	POP R9
	POP R10
	POP R11
	POP R12
	RTS
code.Taylor.taylorArcsin:
	PUSH R12
	PUSH R11
	PUSH R10
	PUSH R9
	PUSH R8
	PUSH R7
	PUSH R6
	PUSH R5
	PUSH R4
	PUSH R3
	PUSH R2
	LOAD #0, R2
	FLOAT R2, R2
	STORE R2, 76(GB)
	LOAD #0, R2
	STORE R2, 77(GB)
While_cond_a6315:
	LOAD 77(GB), R4
	LOAD -4(LB), R3
	SUB R3, R4
	LOAD R4, R1
	BLT OpCmp_if_in_a6315
	LOAD #1, R1
	BRA OpCmp_fin_in_a6315
OpCmp_if_in_a6315:
	LOAD #0, R1
OpCmp_fin_in_a6315:
	LOAD R1, R2
	LOAD R2, R1
	BNE While_fin_a6315
	LOAD 76(GB), R3
; appel de methode8
	ADDSP #3
	LOAD -2(LB), R4
	STORE R4, 0(SP)
	LOAD 77(GB), R5
	STORE R5, -1(SP)
	LOAD -3(LB), R5
	STORE R5, -2(SP)
	LOAD 0(SP), R4
	CMP #null, R4
	BEQ pile_pleine
	LOAD 0(R4), R4
	BSR 8(R4)
	SUBSP #3
	ADD R0, R3
	STORE R3, 76(GB)
	LOAD 77(GB), R3
	LOAD #1, R4
	ADD R4, R3
	STORE R3, 77(GB)
	BRA While_cond_a6315
While_fin_a6315:
	LOAD 76(GB), R2
	LOAD R2, R0
	POP R2
	POP R3
	POP R4
	POP R5
	POP R6
	POP R7
	POP R8
	POP R9
	POP R10
	POP R11
	POP R12
	RTS
init.ChebyApproxi32:
; instruction new
	NEW #1, R2
	LEA 3(GB), R0
	STORE R0, 0(R2)
	PUSH R2
	BSR init.Methods
	POP R2
	LOAD R2, R0
	LOAD -2(LB), R1
	STORE R0, 1(R1)
	RTS
code.ChebyApproxi32.ChebychevActan:
	PUSH R12
	PUSH R11
	PUSH R10
	PUSH R9
	PUSH R8
	PUSH R7
	PUSH R6
	PUSH R5
	PUSH R4
	PUSH R3
	PUSH R2
	LOAD #0x1.138b78p7, R2
	STORE R2, 78(GB)
	LOAD #0x1.379bf6p8, R2
	STORE R2, 79(GB)
	LOAD #0x1.e68816p7, R2
	STORE R2, 80(GB)
	LOAD #0x1.3078c6p6, R2
	STORE R2, 81(GB)
	LOAD #0x1.043f2p3, R2
	STORE R2, 82(GB)
	LOAD #0x1.12db8ap-3, R2
	STORE R2, 83(GB)
	LOAD #0x1.138b78p7, R2
	STORE R2, 84(GB)
	LOAD #0x1.65888ap8, R2
	STORE R2, 85(GB)
	LOAD #0x1.4ee39cp8, R2
	STORE R2, 86(GB)
	LOAD #0x1.0fd872p7, R2
	STORE R2, 87(GB)
	LOAD #0x1.63b09ap4, R2
	STORE R2, 88(GB)
	LOAD 78(GB), R2
	LOAD -3(LB), R3
	MUL R3, R2
	BOV over_flow
	LOAD 79(GB), R3
; appel de methode3
	ADDSP #3
	LOAD -2(LB), R1
	LOAD 1(R1), R4
	STORE R4, 0(SP)
	LOAD -3(LB), R5
	STORE R5, -1(SP)
	LOAD #3, R5
	STORE R5, -2(SP)
	LOAD 0(SP), R4
	CMP #null, R4
	BEQ pile_pleine
	LOAD 0(R4), R4
	BSR 3(R4)
	SUBSP #3
	MUL R0, R3
	BOV over_flow
	ADD R3, R2
	LOAD 80(GB), R3
; appel de methode3
	ADDSP #3
	LOAD -2(LB), R1
	LOAD 1(R1), R4
	STORE R4, 0(SP)
	LOAD -3(LB), R5
	STORE R5, -1(SP)
	LOAD #5, R5
	STORE R5, -2(SP)
	LOAD 0(SP), R4
	CMP #null, R4
	BEQ pile_pleine
	LOAD 0(R4), R4
	BSR 3(R4)
	SUBSP #3
	MUL R0, R3
	BOV over_flow
	ADD R3, R2
	LOAD 81(GB), R3
; appel de methode3
	ADDSP #3
	LOAD -2(LB), R1
	LOAD 1(R1), R4
	STORE R4, 0(SP)
	LOAD -3(LB), R5
	STORE R5, -1(SP)
	LOAD #7, R5
	STORE R5, -2(SP)
	LOAD 0(SP), R4
	CMP #null, R4
	BEQ pile_pleine
	LOAD 0(R4), R4
	BSR 3(R4)
	SUBSP #3
	MUL R0, R3
	BOV over_flow
	ADD R3, R2
	LOAD 82(GB), R3
; appel de methode3
	ADDSP #3
	LOAD -2(LB), R1
	LOAD 1(R1), R4
	STORE R4, 0(SP)
	LOAD -3(LB), R5
	STORE R5, -1(SP)
	LOAD #9, R5
	STORE R5, -2(SP)
	LOAD 0(SP), R4
	CMP #null, R4
	BEQ pile_pleine
	LOAD 0(R4), R4
	BSR 3(R4)
	SUBSP #3
	MUL R0, R3
	BOV over_flow
	ADD R3, R2
	LOAD 83(GB), R3
; appel de methode3
	ADDSP #3
	LOAD -2(LB), R1
	LOAD 1(R1), R4
	STORE R4, 0(SP)
	LOAD -3(LB), R5
	STORE R5, -1(SP)
	LOAD #11, R5
	STORE R5, -2(SP)
	LOAD 0(SP), R4
	CMP #null, R4
	BEQ pile_pleine
	LOAD 0(R4), R4
	BSR 3(R4)
	SUBSP #3
	MUL R0, R3
	BOV over_flow
	ADD R3, R2
	LOAD 84(GB), R3
	LOAD 85(GB), R4
; appel de methode3
	ADDSP #3
	LOAD -2(LB), R1
	LOAD 1(R1), R5
	STORE R5, 0(SP)
	LOAD -3(LB), R7
	STORE R7, -1(SP)
	LOAD #2, R7
	STORE R7, -2(SP)
	LOAD 0(SP), R5
	CMP #null, R5
	BEQ pile_pleine
	LOAD 0(R5), R5
	BSR 3(R5)
	SUBSP #3
	MUL R0, R4
	BOV over_flow
	ADD R4, R3
	LOAD 86(GB), R4
; appel de methode3
	ADDSP #3
	LOAD -2(LB), R1
	LOAD 1(R1), R5
	STORE R5, 0(SP)
	LOAD -3(LB), R7
	STORE R7, -1(SP)
	LOAD #4, R7
	STORE R7, -2(SP)
	LOAD 0(SP), R5
	CMP #null, R5
	BEQ pile_pleine
	LOAD 0(R5), R5
	BSR 3(R5)
	SUBSP #3
	MUL R0, R4
	BOV over_flow
	ADD R4, R3
	LOAD 87(GB), R4
; appel de methode3
	ADDSP #3
	LOAD -2(LB), R1
	LOAD 1(R1), R5
	STORE R5, 0(SP)
	LOAD -3(LB), R7
	STORE R7, -1(SP)
	LOAD #6, R7
	STORE R7, -2(SP)
	LOAD 0(SP), R5
	CMP #null, R5
	BEQ pile_pleine
	LOAD 0(R5), R5
	BSR 3(R5)
	SUBSP #3
	MUL R0, R4
	BOV over_flow
	ADD R4, R3
	LOAD 88(GB), R4
; appel de methode3
	ADDSP #3
	LOAD -2(LB), R1
	LOAD 1(R1), R5
	STORE R5, 0(SP)
	LOAD -3(LB), R7
	STORE R7, -1(SP)
	LOAD #8, R7
	STORE R7, -2(SP)
	LOAD 0(SP), R5
	CMP #null, R5
	BEQ pile_pleine
	LOAD 0(R5), R5
	BSR 3(R5)
	SUBSP #3
	MUL R0, R4
	BOV over_flow
	ADD R4, R3
	DIV R3, R2
	BOV divisionErr
	LOAD R2, R0
	POP R2
	POP R3
	POP R4
	POP R5
	POP R6
	POP R7
	POP R8
	POP R9
	POP R10
	POP R11
	POP R12
	RTS
code.ChebyApproxi32.ChebychevSinus:
	PUSH R12
	PUSH R11
	PUSH R10
	PUSH R9
	PUSH R8
	PUSH R7
	PUSH R6
	PUSH R5
	PUSH R4
	PUSH R3
	PUSH R2
	LOAD #0x1.555556p-3, R2
	OPP R2, R2
	STORE R2, 89(GB)
	LOAD #0x1.111112p-7, R2
	STORE R2, 90(GB)
	LOAD #0x1.a01a02p-13, R2
	OPP R2, R2
	STORE R2, 91(GB)
	LOAD #0x1.71dc0ep-19, R2
	STORE R2, 92(GB)
	LOAD -3(LB), R2
	LOAD 89(GB), R3
; appel de methode3
	ADDSP #3
	LOAD -2(LB), R1
	LOAD 1(R1), R4
	STORE R4, 0(SP)
	LOAD -3(LB), R5
	STORE R5, -1(SP)
	LOAD #3, R5
	STORE R5, -2(SP)
	LOAD 0(SP), R4
	CMP #null, R4
	BEQ pile_pleine
	LOAD 0(R4), R4
	BSR 3(R4)
	SUBSP #3
	MUL R0, R3
	BOV over_flow
	ADD R3, R2
	LOAD 90(GB), R3
; appel de methode3
	ADDSP #3
	LOAD -2(LB), R1
	LOAD 1(R1), R4
	STORE R4, 0(SP)
	LOAD -3(LB), R5
	STORE R5, -1(SP)
	LOAD #5, R5
	STORE R5, -2(SP)
	LOAD 0(SP), R4
	CMP #null, R4
	BEQ pile_pleine
	LOAD 0(R4), R4
	BSR 3(R4)
	SUBSP #3
	MUL R0, R3
	BOV over_flow
	ADD R3, R2
	LOAD 91(GB), R3
; appel de methode3
	ADDSP #3
	LOAD -2(LB), R1
	LOAD 1(R1), R4
	STORE R4, 0(SP)
	LOAD -3(LB), R5
	STORE R5, -1(SP)
	LOAD #7, R5
	STORE R5, -2(SP)
	LOAD 0(SP), R4
	CMP #null, R4
	BEQ pile_pleine
	LOAD 0(R4), R4
	BSR 3(R4)
	SUBSP #3
	MUL R0, R3
	BOV over_flow
	ADD R3, R2
	LOAD 92(GB), R3
; appel de methode3
	ADDSP #3
	LOAD -2(LB), R1
	LOAD 1(R1), R4
	STORE R4, 0(SP)
	LOAD -3(LB), R5
	STORE R5, -1(SP)
	LOAD #9, R5
	STORE R5, -2(SP)
	LOAD 0(SP), R4
	CMP #null, R4
	BEQ pile_pleine
	LOAD 0(R4), R4
	BSR 3(R4)
	SUBSP #3
	MUL R0, R3
	BOV over_flow
	ADD R3, R2
	LOAD R2, R0
	POP R2
	POP R3
	POP R4
	POP R5
	POP R6
	POP R7
	POP R8
	POP R9
	POP R10
	POP R11
	POP R12
	RTS
code.ChebyApproxi32.ChebychevCosinus:
	PUSH R12
	PUSH R11
	PUSH R10
	PUSH R9
	PUSH R8
	PUSH R7
	PUSH R6
	PUSH R5
	PUSH R4
	PUSH R3
	PUSH R2
	LOAD #0x1.0p-1, R2
	OPP R2, R2
	STORE R2, 93(GB)
	LOAD #0x1.555556p-5, R2
	STORE R2, 94(GB)
	LOAD #0x1.6c16c2p-10, R2
	OPP R2, R2
	STORE R2, 95(GB)
	LOAD #0x1.a01a02p-16, R2
	STORE R2, 96(GB)
	LOAD #0x1.27e354p-22, R2
	OPP R2, R2
	STORE R2, 97(GB)
	LOAD #1, R2
	FLOAT R2, R2
	LOAD 93(GB), R3
; appel de methode3
	ADDSP #3
	LOAD -2(LB), R1
	LOAD 1(R1), R4
	STORE R4, 0(SP)
	LOAD -3(LB), R5
	STORE R5, -1(SP)
	LOAD #2, R5
	STORE R5, -2(SP)
	LOAD 0(SP), R4
	CMP #null, R4
	BEQ pile_pleine
	LOAD 0(R4), R4
	BSR 3(R4)
	SUBSP #3
	MUL R0, R3
	BOV over_flow
	ADD R3, R2
	LOAD 94(GB), R3
; appel de methode3
	ADDSP #3
	LOAD -2(LB), R1
	LOAD 1(R1), R4
	STORE R4, 0(SP)
	LOAD -3(LB), R5
	STORE R5, -1(SP)
	LOAD #4, R5
	STORE R5, -2(SP)
	LOAD 0(SP), R4
	CMP #null, R4
	BEQ pile_pleine
	LOAD 0(R4), R4
	BSR 3(R4)
	SUBSP #3
	MUL R0, R3
	BOV over_flow
	ADD R3, R2
	LOAD 95(GB), R3
; appel de methode3
	ADDSP #3
	LOAD -2(LB), R1
	LOAD 1(R1), R4
	STORE R4, 0(SP)
	LOAD -3(LB), R5
	STORE R5, -1(SP)
	LOAD #6, R5
	STORE R5, -2(SP)
	LOAD 0(SP), R4
	CMP #null, R4
	BEQ pile_pleine
	LOAD 0(R4), R4
	BSR 3(R4)
	SUBSP #3
	MUL R0, R3
	BOV over_flow
	ADD R3, R2
	LOAD 96(GB), R3
; appel de methode3
	ADDSP #3
	LOAD -2(LB), R1
	LOAD 1(R1), R4
	STORE R4, 0(SP)
	LOAD -3(LB), R5
	STORE R5, -1(SP)
	LOAD #8, R5
	STORE R5, -2(SP)
	LOAD 0(SP), R4
	CMP #null, R4
	BEQ pile_pleine
	LOAD 0(R4), R4
	BSR 3(R4)
	SUBSP #3
	MUL R0, R3
	BOV over_flow
	ADD R3, R2
	LOAD 97(GB), R3
; appel de methode3
	ADDSP #3
	LOAD -2(LB), R1
	LOAD 1(R1), R4
	STORE R4, 0(SP)
	LOAD -3(LB), R5
	STORE R5, -1(SP)
	LOAD #10, R5
	STORE R5, -2(SP)
	LOAD 0(SP), R4
	CMP #null, R4
	BEQ pile_pleine
	LOAD 0(R4), R4
	BSR 3(R4)
	SUBSP #3
	MUL R0, R3
	BOV over_flow
	ADD R3, R2
	LOAD R2, R0
	POP R2
	POP R3
	POP R4
	POP R5
	POP R6
	POP R7
	POP R8
	POP R9
	POP R10
	POP R11
	POP R12
	RTS
init.Chebychev:
	LOAD #0x1.921fb4p1, R2
	LOAD R2, R0
	LOAD -2(LB), R1
	STORE R0, 1(R1)
; instruction new
	NEW #1, R2
	LEA 9(GB), R0
	STORE R0, 0(R2)
	PUSH R2
	BSR init.ChebychevValues
	POP R2
	LOAD R2, R0
	LOAD -2(LB), R1
	STORE R0, 2(R1)
; instruction new
	NEW #3, R2
	LEA 14(GB), R0
	STORE R0, 0(R2)
	PUSH R2
	BSR init.Couple
	POP R2
	LOAD R2, R0
	LOAD -2(LB), R1
	STORE R0, 3(R1)
; instruction new
	NEW #1, R2
	LEA 3(GB), R0
	STORE R0, 0(R2)
	PUSH R2
	BSR init.Methods
	POP R2
	LOAD R2, R0
	LOAD -2(LB), R1
	STORE R0, 4(R1)
; instruction new
	NEW #2, R2
	LEA 16(GB), R0
	STORE R0, 0(R2)
	PUSH R2
	BSR init.RangeReduction
	POP R2
	LOAD R2, R0
	LOAD -2(LB), R1
	STORE R0, 5(R1)
; instruction new
	NEW #2, R2
	LEA 34(GB), R0
	STORE R0, 0(R2)
	PUSH R2
	BSR init.ChebyApproxi32
	POP R2
	LOAD R2, R0
	LOAD -2(LB), R1
	STORE R0, 6(R1)
; instruction new
	NEW #2, R2
	LEA 20(GB), R0
	STORE R0, 0(R2)
	PUSH R2
	BSR init.BreakPoints
	POP R2
	LOAD R2, R0
	LOAD -2(LB), R1
	STORE R0, 7(R1)
	RTS
code.Chebychev.sinCheb:
	PUSH R12
	PUSH R11
	PUSH R10
	PUSH R9
	PUSH R8
	PUSH R7
	PUSH R6
	PUSH R5
	PUSH R4
	PUSH R3
	PUSH R2
; instruction new
	NEW #3, R2
	LEA 14(GB), R0
	STORE R0, 0(R2)
	PUSH R2
	BSR init.Couple
	POP R2
	STORE R2, 98(GB)
	LOAD #0x0.0p0, R2
	STORE R2, 99(GB)
	LOAD #0x0.0p0, R2
	STORE R2, 100(GB)
	LOAD #0x0.0p0, R2
	STORE R2, 101(GB)
	LOAD -3(LB), R4
	LOAD -2(LB), R1
	LOAD 1(R1), R5
	LOAD #4, R7
	FLOAT R7, R7
	DIV R7, R5
	BOV divisionErr
	SUB R5, R4
	LOAD R4, R1
	BLE OpCmp_if_in_a13112
	LOAD #1, R1
	BRA OpCmp_fin_in_a13112
OpCmp_if_in_a13112:
	LOAD #0, R1
OpCmp_fin_in_a13112:
	LOAD R1, R3
	LOAD R3, R1
	BNE And_else_in_a13112
	LOAD -3(LB), R5
	LOAD #0, R4
	FLOAT R4, R4
	SUB R4, R5
	LOAD R5, R1
	BGE OpCmp_if_in_a13129
	LOAD #1, R1
	BRA OpCmp_fin_in_a13129
OpCmp_if_in_a13129:
	LOAD #0, R1
OpCmp_fin_in_a13129:
	LOAD R1, R3
	LOAD R3, R1
	BNE And_else_in_a13112
	LOAD #0, R1
	BRA And_fin_in_a13112
And_else_in_a13112:
	LOAD #1, R1
And_fin_in_a13112:
	LOAD R1, R2
	LOAD R2, R1
	BNE IfThenElse_else_a13112
; appel de methode4
	ADDSP #2
	LOAD -2(LB), R1
	LOAD 4(R1), R4
	STORE R4, 0(SP)
	LOAD -3(LB), R5
	STORE R5, -1(SP)
	LOAD 0(SP), R4
	CMP #null, R4
	BEQ pile_pleine
	LOAD 0(R4), R4
	BSR 4(R4)
	SUBSP #2
	LOAD #0x1.0p-5, R4
	SUB R4, R0
	LOAD R0, R1
	BLE OpCmp_if_in_a13215
	LOAD #1, R1
	BRA OpCmp_fin_in_a13215
OpCmp_if_in_a13215:
	LOAD #0, R1
OpCmp_fin_in_a13215:
	LOAD R1, R3
	LOAD R3, R1
	BNE IfThenElse_else_a13215
; appel de methode3
	ADDSP #2
	LOAD -2(LB), R1
	LOAD 6(R1), R4
	STORE R4, 0(SP)
	LOAD -3(LB), R5
	STORE R5, -1(SP)
	LOAD 0(SP), R4
	CMP #null, R4
	BEQ pile_pleine
	LOAD 0(R4), R4
	BSR 3(R4)
	SUBSP #2
	LOAD R0, R0
	BRA IfThenElse_fin_a13215
IfThenElse_else_a13215:
IfThenElse_fin_a13215:
; appel de methode3
	ADDSP #2
	LOAD -2(LB), R1
	LOAD 7(R1), R3
	STORE R3, 0(SP)
	LOAD -3(LB), R4
	STORE R4, -1(SP)
	LOAD 0(SP), R3
	CMP #null, R3
	BEQ pile_pleine
	LOAD 0(R3), R3
	BSR 3(R3)
	SUBSP #2
	STORE R0, 98(GB)
; appel de methode2
	ADDSP #3
	LOAD -2(LB), R1
	LOAD 7(R1), R3
	STORE R3, 0(SP)
	LOAD 98(GB), R4
	LOAD 1(R4), R4
	STORE R4, -1(SP)
	LOAD 98(GB), R4
	LOAD 2(R4), R4
	STORE R4, -2(SP)
	LOAD 0(SP), R3
	CMP #null, R3
	BEQ pile_pleine
	LOAD 0(R3), R3
	BSR 2(R3)
	SUBSP #3
	STORE R0, 99(GB)
	LOAD -3(LB), R3
	LOAD 99(GB), R4
	SUB R4, R3
	STORE R3, 100(GB)
; appel de methode3
	ADDSP #3
	LOAD -2(LB), R1
	LOAD 2(R1), R3
	STORE R3, 0(SP)
	LOAD 98(GB), R4
	LOAD 1(R4), R4
	STORE R4, -1(SP)
	LOAD 98(GB), R4
	LOAD 2(R4), R4
	STORE R4, -2(SP)
	LOAD 0(SP), R3
	CMP #null, R3
	BEQ pile_pleine
	LOAD 0(R3), R3
	BSR 3(R3)
	SUBSP #3
; appel de methode4
	ADDSP #2
	LOAD -2(LB), R1
	LOAD 6(R1), R3
	STORE R3, 0(SP)
	LOAD 100(GB), R4
	STORE R4, -1(SP)
	LOAD 0(SP), R3
	CMP #null, R3
	BEQ pile_pleine
	LOAD 0(R3), R3
	BSR 4(R3)
	SUBSP #2
	MUL R0, R0
	BOV over_flow
; appel de methode2
	ADDSP #3
	LOAD -2(LB), R1
	LOAD 2(R1), R3
	STORE R3, 0(SP)
	LOAD 98(GB), R4
	LOAD 1(R4), R4
	STORE R4, -1(SP)
	LOAD 98(GB), R4
	LOAD 2(R4), R4
	STORE R4, -2(SP)
	LOAD 0(SP), R3
	CMP #null, R3
	BEQ pile_pleine
	LOAD 0(R3), R3
	BSR 2(R3)
	SUBSP #3
; appel de methode3
	ADDSP #2
	LOAD -2(LB), R1
	LOAD 6(R1), R3
	STORE R3, 0(SP)
	LOAD 100(GB), R4
	STORE R4, -1(SP)
	LOAD 0(SP), R3
	CMP #null, R3
	BEQ pile_pleine
	LOAD 0(R3), R3
	BSR 3(R3)
	SUBSP #2
	MUL R0, R0
	BOV over_flow
	ADD R0, R0
	LOAD R0, R0
	BRA IfThenElse_fin_a13112
IfThenElse_else_a13112:
	LOAD -3(LB), R4
	LOAD #0, R4
	FLOAT R4, R4
	SUB R4, R4
	LOAD R4, R1
	BLT OpCmp_if_in_a14317
	LOAD #1, R1
	BRA OpCmp_fin_in_a14317
OpCmp_if_in_a14317:
	LOAD #0, R1
OpCmp_fin_in_a14317:
	LOAD R1, R3
	LOAD R3, R1
	BNE IfThenElse_else_a14317
; appel de methode2
	ADDSP #2
	LOAD -2(LB), R4
	STORE R4, 0(SP)
	LOAD -3(LB), R4
	OPP R4, R4
	STORE R4, -1(SP)
	LOAD 0(SP), R4
	CMP #null, R4
	BEQ pile_pleine
	LOAD 0(R4), R4
	BSR 2(R4)
	SUBSP #2
	OPP R0, R0
	LOAD R0, R0
	BRA IfThenElse_fin_a14317
IfThenElse_else_a14317:
	LOAD -3(LB), R4
	LOAD -2(LB), R1
	LOAD 1(R1), R4
	SUB R4, R4
	LOAD R4, R1
	BGT OpCmp_if_in_a14816
	LOAD #1, R1
	BRA OpCmp_fin_in_a14816
OpCmp_if_in_a14816:
	LOAD #0, R1
OpCmp_fin_in_a14816:
	LOAD R1, R4
	LOAD R4, R1
	BNE IfThenElse_else_a14816
; appel de methode2
	ADDSP #2
	LOAD -2(LB), R1
	LOAD 5(R1), R4
	STORE R4, 0(SP)
	LOAD -3(LB), R4
	STORE R4, -1(SP)
	LOAD 0(SP), R4
	CMP #null, R4
	BEQ pile_pleine
	LOAD 0(R4), R4
	BSR 2(R4)
	SUBSP #2
	STORE R0, 101(GB)
; appel de methode2
	ADDSP #2
	LOAD -2(LB), R4
	STORE R4, 0(SP)
	LOAD 101(GB), R4
	STORE R4, -1(SP)
	LOAD 0(SP), R4
	CMP #null, R4
	BEQ pile_pleine
	LOAD 0(R4), R4
	BSR 2(R4)
	SUBSP #2
	LOAD R0, R0
	BRA IfThenElse_fin_a14816
IfThenElse_else_a14816:
	LOAD -3(LB), R4
	LOAD -2(LB), R1
	LOAD 1(R1), R4
	LOAD #2, R4
	FLOAT R4, R4
	DIV R4, R4
	BOV divisionErr
	SUB R4, R4
	LOAD R4, R1
	BGT OpCmp_if_in_a15321
	LOAD #1, R1
	BRA OpCmp_fin_in_a15321
OpCmp_if_in_a15321:
	LOAD #0, R1
OpCmp_fin_in_a15321:
	LOAD R1, R4
	LOAD R4, R1
	BNE IfThenElse_else_a15321
; appel de methode3
	ADDSP #2
	LOAD -2(LB), R4
	STORE R4, 0(SP)
	LOAD -2(LB), R1
	LOAD 1(R1), R4
	LOAD #2, R4
	FLOAT R4, R4
	DIV R4, R4
	BOV divisionErr
	LOAD -3(LB), R4
	SUB R4, R4
	STORE R4, -1(SP)
	LOAD 0(SP), R4
	CMP #null, R4
	BEQ pile_pleine
	LOAD 0(R4), R4
	BSR 3(R4)
	SUBSP #2
	LOAD R0, R0
	BRA IfThenElse_fin_a15321
IfThenElse_else_a15321:
	LOAD #2, R4
	FLOAT R4, R4
; appel de methode2
	ADDSP #2
	LOAD -2(LB), R4
	STORE R4, 0(SP)
	LOAD -3(LB), R4
	LOAD #2, R4
	FLOAT R4, R4
	DIV R4, R4
	BOV divisionErr
	STORE R4, -1(SP)
	LOAD 0(SP), R4
	CMP #null, R4
	BEQ pile_pleine
	LOAD 0(R4), R4
	BSR 2(R4)
	SUBSP #2
	MUL R0, R4
	BOV over_flow
; appel de methode3
	ADDSP #2
	LOAD -2(LB), R4
	STORE R4, 0(SP)
	LOAD -3(LB), R4
	LOAD #2, R4
	FLOAT R4, R4
	DIV R4, R4
	BOV divisionErr
	STORE R4, -1(SP)
	LOAD 0(SP), R4
	CMP #null, R4
	BEQ pile_pleine
	LOAD 0(R4), R4
	BSR 3(R4)
	SUBSP #2
	MUL R0, R4
	BOV over_flow
	LOAD R4, R0
IfThenElse_fin_a15321:
IfThenElse_fin_a14816:
IfThenElse_fin_a14317:
IfThenElse_fin_a13112:
	POP R2
	POP R3
	POP R4
	POP R5
	POP R6
	POP R7
	POP R8
	POP R9
	POP R10
	POP R11
	POP R12
	RTS
code.Chebychev.cosCheb:
	PUSH R12
	PUSH R11
	PUSH R10
	PUSH R9
	PUSH R8
	PUSH R7
	PUSH R6
	PUSH R5
	PUSH R4
	PUSH R3
	PUSH R2
; instruction new
	NEW #3, R2
	LEA 14(GB), R0
	STORE R0, 0(R2)
	PUSH R2
	BSR init.Couple
	POP R2
	STORE R2, 102(GB)
	LOAD #0x0.0p0, R2
	STORE R2, 103(GB)
	LOAD #0x0.0p0, R2
	STORE R2, 104(GB)
	LOAD #0x0.0p0, R2
	STORE R2, 105(GB)
	LOAD -3(LB), R4
	LOAD -2(LB), R1
	LOAD 1(R1), R4
	LOAD #4, R4
	FLOAT R4, R4
	DIV R4, R4
	BOV divisionErr
	SUB R4, R4
	LOAD R4, R1
	BLE OpCmp_if_in_a17012
	LOAD #1, R1
	BRA OpCmp_fin_in_a17012
OpCmp_if_in_a17012:
	LOAD #0, R1
OpCmp_fin_in_a17012:
	LOAD R1, R3
	LOAD R3, R1
	BNE And_else_in_a17012
	LOAD -3(LB), R4
	LOAD #0, R4
	FLOAT R4, R4
	SUB R4, R4
	LOAD R4, R1
	BGE OpCmp_if_in_a17029
	LOAD #1, R1
	BRA OpCmp_fin_in_a17029
OpCmp_if_in_a17029:
	LOAD #0, R1
OpCmp_fin_in_a17029:
	LOAD R1, R3
	LOAD R3, R1
	BNE And_else_in_a17012
	LOAD #0, R1
	BRA And_fin_in_a17012
And_else_in_a17012:
	LOAD #1, R1
And_fin_in_a17012:
	LOAD R1, R2
	LOAD R2, R1
	BNE IfThenElse_else_a17012
; appel de methode4
	ADDSP #2
	LOAD -2(LB), R1
	LOAD 4(R1), R4
	STORE R4, 0(SP)
	LOAD -3(LB), R4
	STORE R4, -1(SP)
	LOAD 0(SP), R4
	CMP #null, R4
	BEQ pile_pleine
	LOAD 0(R4), R4
	BSR 4(R4)
	SUBSP #2
	LOAD #0x1.0p-5, R4
	SUB R4, R0
	LOAD R0, R1
	BLE OpCmp_if_in_a17115
	LOAD #1, R1
	BRA OpCmp_fin_in_a17115
OpCmp_if_in_a17115:
	LOAD #0, R1
OpCmp_fin_in_a17115:
	LOAD R1, R3
	LOAD R3, R1
	BNE IfThenElse_else_a17115
; appel de methode4
	ADDSP #2
	LOAD -2(LB), R1
	LOAD 6(R1), R4
	STORE R4, 0(SP)
	LOAD -3(LB), R4
	STORE R4, -1(SP)
	LOAD 0(SP), R4
	CMP #null, R4
	BEQ pile_pleine
	LOAD 0(R4), R4
	BSR 4(R4)
	SUBSP #2
	LOAD R0, R0
	BRA IfThenElse_fin_a17115
IfThenElse_else_a17115:
IfThenElse_fin_a17115:
; appel de methode3
	ADDSP #2
	LOAD -2(LB), R1
	LOAD 7(R1), R3
	STORE R3, 0(SP)
	LOAD -3(LB), R4
	STORE R4, -1(SP)
	LOAD 0(SP), R3
	CMP #null, R3
	BEQ pile_pleine
	LOAD 0(R3), R3
	BSR 3(R3)
	SUBSP #2
	STORE R0, 102(GB)
; appel de methode2
	ADDSP #3
	LOAD -2(LB), R1
	LOAD 7(R1), R3
	STORE R3, 0(SP)
	LOAD 102(GB), R4
	LOAD 1(R4), R4
	STORE R4, -1(SP)
	LOAD 102(GB), R4
	LOAD 2(R4), R4
	STORE R4, -2(SP)
	LOAD 0(SP), R3
	CMP #null, R3
	BEQ pile_pleine
	LOAD 0(R3), R3
	BSR 2(R3)
	SUBSP #3
	STORE R0, 103(GB)
	LOAD -3(LB), R3
	LOAD 103(GB), R4
	SUB R4, R3
	STORE R3, 104(GB)
; appel de methode2
	ADDSP #3
	LOAD -2(LB), R1
	LOAD 2(R1), R3
	STORE R3, 0(SP)
	LOAD 102(GB), R4
	LOAD 1(R4), R4
	STORE R4, -1(SP)
	LOAD 102(GB), R4
	LOAD 2(R4), R4
	STORE R4, -2(SP)
	LOAD 0(SP), R3
	CMP #null, R3
	BEQ pile_pleine
	LOAD 0(R3), R3
	BSR 2(R3)
	SUBSP #3
; appel de methode4
	ADDSP #2
	LOAD -2(LB), R1
	LOAD 6(R1), R3
	STORE R3, 0(SP)
	LOAD 104(GB), R4
	STORE R4, -1(SP)
	LOAD 0(SP), R3
	CMP #null, R3
	BEQ pile_pleine
	LOAD 0(R3), R3
	BSR 4(R3)
	SUBSP #2
	MUL R0, R0
	BOV over_flow
; appel de methode3
	ADDSP #3
	LOAD -2(LB), R1
	LOAD 2(R1), R3
	STORE R3, 0(SP)
	LOAD 102(GB), R4
	LOAD 1(R4), R4
	STORE R4, -1(SP)
	LOAD 102(GB), R4
	LOAD 2(R4), R4
	STORE R4, -2(SP)
	LOAD 0(SP), R3
	CMP #null, R3
	BEQ pile_pleine
	LOAD 0(R3), R3
	BSR 3(R3)
	SUBSP #3
; appel de methode3
	ADDSP #2
	LOAD -2(LB), R1
	LOAD 6(R1), R3
	STORE R3, 0(SP)
	LOAD 104(GB), R4
	STORE R4, -1(SP)
	LOAD 0(SP), R3
	CMP #null, R3
	BEQ pile_pleine
	LOAD 0(R3), R3
	BSR 3(R3)
	SUBSP #2
	MUL R0, R0
	BOV over_flow
	SUB R0, R0
	LOAD R0, R0
	BRA IfThenElse_fin_a17012
IfThenElse_else_a17012:
	LOAD -3(LB), R4
	LOAD #0, R4
	FLOAT R4, R4
	SUB R4, R4
	LOAD R4, R1
	BLT OpCmp_if_in_a18117
	LOAD #1, R1
	BRA OpCmp_fin_in_a18117
OpCmp_if_in_a18117:
	LOAD #0, R1
OpCmp_fin_in_a18117:
	LOAD R1, R3
	LOAD R3, R1
	BNE IfThenElse_else_a18117
; appel de methode3
	ADDSP #2
	LOAD -2(LB), R4
	STORE R4, 0(SP)
	LOAD -3(LB), R4
	OPP R4, R4
	STORE R4, -1(SP)
	LOAD 0(SP), R4
	CMP #null, R4
	BEQ pile_pleine
	LOAD 0(R4), R4
	BSR 3(R4)
	SUBSP #2
	LOAD R0, R0
	BRA IfThenElse_fin_a18117
IfThenElse_else_a18117:
	LOAD -3(LB), R4
	LOAD #2, R4
	FLOAT R4, R4
	LOAD -2(LB), R1
	LOAD 1(R1), R4
	MUL R4, R4
	BOV over_flow
	SUB R4, R4
	LOAD R4, R1
	BGT OpCmp_if_in_a18616
	LOAD #1, R1
	BRA OpCmp_fin_in_a18616
OpCmp_if_in_a18616:
	LOAD #0, R1
OpCmp_fin_in_a18616:
	LOAD R1, R4
	LOAD R4, R1
	BNE IfThenElse_else_a18616
; appel de methode3
	ADDSP #2
	LOAD -2(LB), R1
	LOAD 5(R1), R4
	STORE R4, 0(SP)
	LOAD -3(LB), R4
	STORE R4, -1(SP)
	LOAD 0(SP), R4
	CMP #null, R4
	BEQ pile_pleine
	LOAD 0(R4), R4
	BSR 3(R4)
	SUBSP #2
	STORE R0, 105(GB)
; appel de methode3
	ADDSP #2
	LOAD -2(LB), R4
	STORE R4, 0(SP)
	LOAD 105(GB), R4
	STORE R4, -1(SP)
	LOAD 0(SP), R4
	CMP #null, R4
	BEQ pile_pleine
	LOAD 0(R4), R4
	BSR 3(R4)
	SUBSP #2
	LOAD R0, R0
	BRA IfThenElse_fin_a18616
IfThenElse_else_a18616:
	LOAD -3(LB), R4
	LOAD -2(LB), R1
	LOAD 1(R1), R4
	SUB R4, R4
	LOAD R4, R1
	BGT OpCmp_if_in_a19021
	LOAD #1, R1
	BRA OpCmp_fin_in_a19021
OpCmp_if_in_a19021:
	LOAD #0, R1
OpCmp_fin_in_a19021:
	LOAD R1, R4
	LOAD R4, R1
	BNE And_else_in_a19021
	LOAD -3(LB), R4
	LOAD #2, R4
	FLOAT R4, R4
	LOAD -2(LB), R1
	LOAD 1(R1), R4
	MUL R4, R4
	BOV over_flow
	SUB R4, R4
	LOAD R4, R1
	BLT OpCmp_if_in_a19035
	LOAD #1, R1
	BRA OpCmp_fin_in_a19035
OpCmp_if_in_a19035:
	LOAD #0, R1
OpCmp_fin_in_a19035:
	LOAD R1, R4
	LOAD R4, R1
	BNE And_else_in_a19021
	LOAD #0, R1
	BRA And_fin_in_a19021
And_else_in_a19021:
	LOAD #1, R1
And_fin_in_a19021:
	LOAD R1, R4
	LOAD R4, R1
	BNE IfThenElse_else_a19021
; appel de methode3
	ADDSP #2
	LOAD -2(LB), R4
	STORE R4, 0(SP)
	LOAD -3(LB), R4
	LOAD -2(LB), R1
	LOAD 1(R1), R4
	SUB R4, R4
	STORE R4, -1(SP)
	LOAD 0(SP), R4
	CMP #null, R4
	BEQ pile_pleine
	LOAD 0(R4), R4
	BSR 3(R4)
	SUBSP #2
	OPP R0, R0
	LOAD R0, R0
	BRA IfThenElse_fin_a19021
IfThenElse_else_a19021:
	LOAD -3(LB), R4
	LOAD -2(LB), R1
	LOAD 1(R1), R4
	LOAD #2, R4
	FLOAT R4, R4
	DIV R4, R4
	BOV divisionErr
	SUB R4, R4
	LOAD R4, R1
	BGT OpCmp_if_in_a19421
	LOAD #1, R1
	BRA OpCmp_fin_in_a19421
OpCmp_if_in_a19421:
	LOAD #0, R1
OpCmp_fin_in_a19421:
	LOAD R1, R4
	LOAD R4, R1
	BNE IfThenElse_else_a19421
; appel de methode2
	ADDSP #2
	LOAD -2(LB), R4
	STORE R4, 0(SP)
	LOAD -2(LB), R1
	LOAD 1(R1), R4
	LOAD #2, R4
	FLOAT R4, R4
	DIV R4, R4
	BOV divisionErr
	LOAD -3(LB), R4
	SUB R4, R4
	STORE R4, -1(SP)
	LOAD 0(SP), R4
	CMP #null, R4
	BEQ pile_pleine
	LOAD 0(R4), R4
	BSR 2(R4)
	SUBSP #2
	LOAD R0, R0
	BRA IfThenElse_fin_a19421
IfThenElse_else_a19421:
	LOAD #1, R4
	FLOAT R4, R4
	LOAD #2, R4
	FLOAT R4, R4
; appel de methode3
	ADDSP #3
	LOAD -2(LB), R1
	LOAD 4(R1), R4
	STORE R4, 0(SP)
; appel de methode2
	ADDSP #2
	LOAD -2(LB), R4
	STORE R4, 0(SP)
	LOAD -3(LB), R4
	LOAD #2, R4
	FLOAT R4, R4
	DIV R4, R4
	BOV divisionErr
	STORE R4, -1(SP)
	LOAD 0(SP), R4
	CMP #null, R4
	BEQ pile_pleine
	LOAD 0(R4), R4
	BSR 2(R4)
	SUBSP #2
	STORE R0, -1(SP)
	LOAD #2, R4
	STORE R4, -2(SP)
	LOAD 0(SP), R4
	CMP #null, R4
	BEQ pile_pleine
	LOAD 0(R4), R4
	BSR 3(R4)
	SUBSP #3
	MUL R0, R4
	BOV over_flow
	SUB R4, R4
	LOAD R4, R0
IfThenElse_fin_a19421:
IfThenElse_fin_a19021:
IfThenElse_fin_a18616:
IfThenElse_fin_a18117:
IfThenElse_fin_a17012:
	POP R2
	POP R3
	POP R4
	POP R5
	POP R6
	POP R7
	POP R8
	POP R9
	POP R10
	POP R11
	POP R12
	RTS
code.Object.equals:
pile_pleine:
	WSTR "Error: Stack Overflow"
	WNL
	ERROR
over_flow:
	WSTR "Error: Overflow during arithmetic operation"
	WNL
	ERROR
i0_error:
	WSTR "Error: Input/Output error"
	WNL
	ERROR
divisionErr:
	WSTR "Error :Division par 0"
	WNL
	ERROR
