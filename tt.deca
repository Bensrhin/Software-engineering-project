class Methods {

    int factoriel(int n){
        if (n == 0){
            return 1;
        }
        return n * this.factoriel(n - 1);
    }
    float power(float value1, int value2){
        int counter = 0;
        float result = 1.0F;
        float a = 65.5;
        if (1>0){
        }
        return 1.5;

    }
    float abs(float x){
        if (x > 0.0F){
            return x;
        }
        return -x;
    }
}

class Taylor {

    Methods m = new Methods();
    float coefTaylorCosinus(int n, float x){
        return 1.5;
        //return m.power(-1.0, n) * m.power(x, (2*n)/m.factoriel(2*n));
    }

    float taylorCosinus(float x, int n){
        float s = 0;
        int i = 0;
        while (i < n) {
            s = s + this.coefTaylorCosinus(i, x);
            i = i + 1;
        }
        return s;
    }
}


{
   float PI = 3.141593F;
   float var = (float) (-1/32);
   float var2 =  PI/4;
    

   Taylor t = new Taylor();

   float cos = t.taylorCosinus(0.0f,7);

   print(cos);

}
