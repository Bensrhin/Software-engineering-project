	TSTO #15
	BOV pile_pleine
	ADDSP #9
; table des methodes
; construction de la table des methodes de Object
	LOAD #null, R0
	STORE R0, 1(GB)
	LOAD code.Object.equals, R0
	STORE R0, 2(GB)
; construction de la table des methodes de point
	LEA 1(GB), R0
	STORE R0, 3(GB)
	LOAD code.point.getX, R0
	STORE R0, 5(GB)
	LOAD code.point.getY, R0
	STORE R0, 6(GB)
	LOAD code.point.translate, R0
	STORE R0, 7(GB)
	LOAD code.Object.equals, R0
	STORE R0, 4(GB)
; Main program
; Beginning of main instructions:
; instruction new
	NEW #3, R2
	LEA 3(GB), R0
	STORE R0, 0(R2)
	PUSH R2
	BSR init.point
	POP R2
	STORE R2, 8(GB)
; instruction new
	NEW #3, R2
	LEA 3(GB), R0
	STORE R0, 0(R2)
	PUSH R2
	BSR init.point
	POP R2
	STORE R2, 9(GB)
; appel de methode4
	ADDSP #3
	LOAD 8(GB), R2
	STORE R2, 0(SP)
	LOAD #2, R3
	STORE R3, -1(SP)
	LOAD #4, R3
	STORE R3, -2(SP)
	LOAD 0(SP), R2
	CMP #null, R2
	BEQ pile_pleine
	LOAD 0(R2), R2
	BSR 4(R2)
	SUBSP #3
	LOAD R0, R3
; appel de methode4
	ADDSP #3
	LOAD 9(GB), R2
	STORE R2, 0(SP)
	LOAD #5, R4
	STORE R4, -1(SP)
	LOAD #3, R4
	STORE R4, -2(SP)
	LOAD 0(SP), R2
	CMP #null, R2
	BEQ pile_pleine
	LOAD 0(R2), R2
	BSR 4(R2)
	SUBSP #3
	LOAD R0, R4
; appel de methode2
	ADDSP #1
	LOAD 8(GB), R2
	STORE R2, 0(SP)
	LOAD 0(SP), R2
	CMP #null, R2
	BEQ pile_pleine
	LOAD 0(R2), R2
	BSR 2(R2)
	SUBSP #1
	LOAD R0, R5
	LOAD R5, R1
	WINT
	WSTR " "
; appel de methode3
	ADDSP #1
	LOAD 9(GB), R5
	STORE R5, 0(SP)
	LOAD 0(SP), R5
	CMP #null, R5
	BEQ pile_pleine
	LOAD 0(R5), R5
	BSR 3(R5)
	SUBSP #1
	LOAD R0, R2
	LOAD R2, R1
	WINT
	WNL
	HALT
init.point:
	LOAD #0, R0
	LOAD -2(LB), R1
	STORE R0, 1(R1)
	LOAD #0, R0
	LOAD -2(LB), R1
	STORE R0, 2(R1)
	RTS
code.point.getX:
	PUSH R4
	PUSH R3
	PUSH R2
	LOAD -2(LB), R2
	LOAD 1(R2), R2
	LOAD R2, R0
	POP R2
	POP R3
	POP R4
	RTS
code.point.getY:
	PUSH R2
	LOAD -2(LB), R2
	LOAD 2(R2), R2
	LOAD R2, R0
	POP R2
	RTS
code.point.translate:
	PUSH R5
	PUSH R2
	LOAD -2(LB), R2
	LOAD 1(R2), R2
	LOAD -3(LB), R5
	ADD R5, R2
	LOAD -2(LB), R1
	STORE R2, 1(R1)
	LOAD -2(LB), R2
	LOAD 2(R2), R2
	LOAD -4(LB), R5
	ADD R5, R2
	LOAD -2(LB), R1
	STORE R2, 2(R1)
	POP R2
	POP R5
	RTS
code.Object.equals:
pile_pleine:
	WSTR "Error: Stack Overflow"
	WNL
	ERROR
over_flow:
	WSTR "Error: Overflow during arithmetic operation"
	WNL
	ERROR
i0_error:
	WSTR "Error: Input/Output error"
	WNL
	ERROR
divisionErr:
	WSTR "Error :Division par 0"
	WNL
	ERROR
