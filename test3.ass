	TSTO #11
	BOV pile_pleine
	ADDSP #30
; table des methodes
; construction de la table des methodes de Object
	LOAD #null, R0
	STORE R0, 1(GB)
	LOAD code.Object.equals, R0
	STORE R0, 2(GB)
; construction de la table des methodes de fct
	LEA 1(GB), R0
	STORE R0, 3(GB)
	LOAD code.fct.fact, R0
	STORE R0, 5(GB)
	LOAD code.fct.fibo, R0
	STORE R0, 6(GB)
	LOAD code.Object.equals, R0
	STORE R0, 4(GB)
; Main program
; Beginning of main instructions:
; instruction new
	NEW #1, R2
	LEA 3(GB), R0
	STORE R0, 0(R2)
	PUSH R2
	BSR init.fct
	POP R2
	STORE R2, 7(GB)
	RINT
	BOV i0_error
	LOAD R1, R2
	STORE R2, 8(GB)
; appel de methode3
	ADDSP #2
	LOAD 7(GB), R2
	STORE R2, 0(SP)
	LOAD 8(GB), R3
	STORE R3, -1(SP)
	LOAD 0(SP), R2
	CMP #null, R2
	BEQ pile_pleine
	LOAD 0(R2), R2
	BSR 3(R2)
	SUBSP #2
	STORE R0, 9(GB)
	LOAD 9(GB), R1
	WINT
	WNL
	HALT
init.fct:
	RTS
code.fct.fact:
	PUSH R6
	PUSH R5
	PUSH R4
	PUSH R3
	PUSH R2
	LOAD -3(LB), R3
	LOAD #0, R4
	SUB R4, R3
	LOAD R3, R1
	BEQ OpCmp_if_in_a311
	LOAD #1, R1
	BRA OpCmp_fin_in_a311
OpCmp_if_in_a311:
	LOAD #0, R1
OpCmp_fin_in_a311:
	LOAD R1, R2
	LOAD R2, R1
	BNE IfThenElse_else_a311
	LOAD #1, R4
	LOAD R4, R0
	BRA IfThenElse_fin_a311
IfThenElse_else_a311:
	LOAD -3(LB), R4
; appel de methode2
	ADDSP #2
	LOAD -2(LB), R3
	STORE R3, 0(SP)
	LOAD -3(LB), R5
	LOAD #1, R6
	SUB R6, R5
	STORE R5, -1(SP)
	LOAD 0(SP), R3
	CMP #null, R3
	BEQ pile_pleine
	LOAD 0(R3), R3
	BSR 2(R3)
	SUBSP #2
	MUL R0, R4
	BOV over_flow
	LOAD R4, R0
IfThenElse_fin_a311:
	POP R2
	POP R3
	POP R4
	POP R5
	POP R6
	RTS
code.fct.fibo:
	PUSH R6
	PUSH R5
	PUSH R4
	PUSH R3
	PUSH R2
	LOAD -3(LB), R4
	LOAD #0, R3
	SUB R3, R4
	LOAD R4, R1
	BEQ OpCmp_if_in_a1311
	LOAD #1, R1
	BRA OpCmp_fin_in_a1311
OpCmp_if_in_a1311:
	LOAD #0, R1
OpCmp_fin_in_a1311:
	LOAD R1, R2
	LOAD R2, R1
	BNE IfThenElse_else_a1311
	LOAD #0, R3
	LOAD R3, R0
	BRA IfThenElse_fin_a1311
IfThenElse_else_a1311:
	LOAD -3(LB), R4
	LOAD #1, R5
	SUB R5, R4
	LOAD R4, R1
	BEQ OpCmp_if_in_a1616
	LOAD #1, R1
	BRA OpCmp_fin_in_a1616
OpCmp_if_in_a1616:
	LOAD #0, R1
OpCmp_fin_in_a1616:
	LOAD R1, R3
	LOAD R3, R1
	BNE IfThenElse_else_a1616
	LOAD #1, R5
	LOAD R5, R0
	BRA IfThenElse_fin_a1616
IfThenElse_else_a1616:
; appel de methode3
	ADDSP #2
	LOAD -2(LB), R5
	STORE R5, 0(SP)
	LOAD -3(LB), R4
	LOAD #2, R6
	SUB R6, R4
	STORE R4, -1(SP)
	LOAD 0(SP), R5
	CMP #null, R5
	BEQ pile_pleine
	LOAD 0(R5), R5
	BSR 3(R5)
	SUBSP #2
	STORE R0, 10(GB)
; appel de methode3
	ADDSP #2
	LOAD -2(LB), R5
	STORE R5, 0(SP)
	LOAD -3(LB), R4
	LOAD #1, R6
	SUB R6, R4
	STORE R4, -1(SP)
	LOAD 0(SP), R5
	CMP #null, R5
	BEQ pile_pleine
	LOAD 0(R5), R5
	BSR 3(R5)
	SUBSP #2
	STORE R0, 11(GB)
	LOAD 10(GB), R5
	LOAD 11(GB), R4
	ADD R4, R5
	LOAD R5, R0
IfThenElse_fin_a1616:
IfThenElse_fin_a1311:
	POP R2
	POP R3
	POP R4
	POP R5
	POP R6
	RTS
code.Object.equals:
pile_pleine:
	WSTR "Error: Stack Overflow"
	WNL
	ERROR
over_flow:
	WSTR "Error: Overflow during arithmetic operation"
	WNL
	ERROR
i0_error:
	WSTR "Error: Input/Output error"
	WNL
	ERROR
divisionErr:
	WSTR "Error :Division par 0"
	WNL
	ERROR
